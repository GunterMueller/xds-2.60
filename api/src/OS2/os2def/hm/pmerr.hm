(****************************** Module Header ******************************\
*
* Module Name: PMERR.H
*
* This file contains all the public PM error codes.
*
* This file has been constructed to bring together all the error codes
* into one place.
*
* Copyright (c) International Business Machines Corporation 1981, 1988-1992
*
* ===========================================================================
*
* Comments at the end of each typedef line give the name tags used in
* the assembler include version of this file.
*
* The assembler include version of this file excludes lines between XLATOFF
* and XLATON comments.
*
\***************************************************************************)

#define PMERR_INCLUDED

(****************************************************************************
*** Window Manager error codes
****************************************************************************)

#if ! defined(INCL_WINERRORS)
   #if ! defined(INCL_WINERRORS_INCL)

      #define INCL_WINERRORS_INCL

      CONST PMERR_INVALID_HWND                 = 01001H;
      CONST PMERR_INVALID_HMQ                  = 01002H;
      CONST PMERR_PARAMETER_OUT_OF_RANGE       = 01003H;
      CONST PMERR_WINDOW_LOCK_UNDERFLOW        = 01004H;
      CONST PMERR_WINDOW_LOCK_OVERFLOW         = 01005H;
      CONST PMERR_BAD_WINDOW_LOCK_COUNT        = 01006H;
      CONST PMERR_WINDOW_NOT_LOCKED            = 01007H;
      CONST PMERR_INVALID_SELECTOR             = 01008H;
      CONST PMERR_CALL_FROM_WRONG_THREAD       = 01009H;
      CONST PMERR_RESOURCE_NOT_FOUND           = 0100AH;
      CONST PMERR_INVALID_STRING_PARM          = 0100BH;
      CONST PMERR_INVALID_HHEAP                = 0100CH;
      CONST PMERR_INVALID_HEAP_POINTER         = 0100DH;
      CONST PMERR_INVALID_HEAP_SIZE_PARM       = 0100EH;
      CONST PMERR_INVALID_HEAP_SIZE            = 0100FH;
      CONST PMERR_INVALID_HEAP_SIZE_WORD       = 01010H;
      CONST PMERR_HEAP_OUT_OF_MEMORY           = 01011H;
      CONST PMERR_HEAP_MAX_SIZE_REACHED        = 01012H;
      CONST PMERR_INVALID_HATOMTBL             = 01013H;
      CONST PMERR_INVALID_ATOM                 = 01014H;
      CONST PMERR_INVALID_ATOM_NAME            = 01015H;
      CONST PMERR_INVALID_INTEGER_ATOM         = 01016H;
      CONST PMERR_ATOM_NAME_NOT_FOUND          = 01017H;
      CONST PMERR_QUEUE_TOO_LARGE              = 01018H;
      CONST PMERR_INVALID_FLAG                 = 01019H;
      CONST PMERR_INVALID_HACCEL               = 0101AH;
      CONST PMERR_INVALID_HPTR                 = 0101BH;
      CONST PMERR_INVALID_HENUM                = 0101CH;
      CONST PMERR_INVALID_SRC_CODEPAGE         = 0101DH;
      CONST PMERR_INVALID_DST_CODEPAGE         = 0101EH;

      (* These are not real error codes, but just used to access special  *)
      (* error message strings used by WinGetErrorInfo to format an error *)
      (* message.                                                         *)

      CONST PMERR_UNKNOWN_COMPONENT_ID         = 0101fH;
      CONST PMERR_UNKNOWN_ERROR_CODE           = 01020H;
      CONST PMERR_SEVERITY_LEVELS              = 01021H;

      (* 01022 - 01033, 01035, 0104B - 0104C used elsewhere          *)
      CONST PMERR_INVALID_RESOURCE_FORMAT      = 01034H;
      CONST WINDBG_WINDOW_UNLOCK_WAIT          = 01035H;
      CONST PMERR_NO_MSG_QUEUE                 = 01036H;
      CONST PMERR_WIN_DEBUGMSG                 = 01037H;
      CONST PMERR_QUEUE_FULL                   = 01038H;

      CONST PMERR_LIBRARY_LOAD_FAILED          = 01039H;
      CONST PMERR_PROCEDURE_LOAD_FAILED        = 0103AH;
      CONST PMERR_LIBRARY_DELETE_FAILED        = 0103BH;
      CONST PMERR_PROCEDURE_DELETE_FAILED      = 0103CH;
      CONST PMERR_ARRAY_TOO_LARGE              = 0103DH;
      CONST PMERR_ARRAY_TOO_SMALL              = 0103EH;
      CONST PMERR_DATATYPE_ENTRY_BAD_INDEX     = 0103FH;
      CONST PMERR_DATATYPE_ENTRY_CTL_BAD       = 01040H;
      CONST PMERR_DATATYPE_ENTRY_CTL_MISS      = 01041H;
      CONST PMERR_DATATYPE_ENTRY_INVALID       = 01042H;
      CONST PMERR_DATATYPE_ENTRY_NOT_NUM       = 01043H;
      CONST PMERR_DATATYPE_ENTRY_NOT_OFF       = 01044H;
      CONST PMERR_DATATYPE_INVALID             = 01045H;
      CONST PMERR_DATATYPE_NOT_UNIQUE          = 01046H;
      CONST PMERR_DATATYPE_TOO_LONG            = 01047H;
      CONST PMERR_DATATYPE_TOO_SMALL           = 01048H;
      CONST PMERR_DIRECTION_INVALID            = 01049H;
      CONST PMERR_INVALID_HAB                  = 0104AH;
      CONST PMERR_INVALID_HSTRUCT              = 0104DH;
      CONST PMERR_LENGTH_TOO_SMALL             = 0104EH;
      CONST PMERR_MSGID_TOO_SMALL              = 0104FH;
      CONST PMERR_NO_HANDLE_ALLOC              = 01050H;
      CONST PMERR_NOT_IN_A_PM_SESSION          = 01051H;
      CONST PMERR_MSG_QUEUE_ALREADY_EXISTS     = 01052H;

      CONST PMERR_OLD_RESOURCE                 = 01055H;
   #endif (* error codes already included *)
#endif (* include error codes *)

(***********************************************************************
*
*            Window Manager error codes
*
* 2.) PMSHL error codes
*
***********************************************************************)

#if defined(INCL_SHLERRORS)

   #if ! defined(INCL_SHLERRORS_INCL)
      (* XLATOFF *)
      #define INCL_SHLERRORS_INCL
      (* XLATON *)

      CONST PMERR_INVALID_PIB               = 01101H;
      CONST PMERR_INSUFF_SPACE_TO_ADD       = 01102H;
      CONST PMERR_INVALID_GROUP_HANDLE      = 01103H;
      CONST PMERR_DUPLICATE_TITLE           = 01104H;
      CONST PMERR_INVALID_TITLE             = 01105H;
      CONST PMERR_HANDLE_NOT_IN_GROUP       = 01107H;
      CONST PMERR_INVALID_TARGET_HANDLE     = 01106H;
      CONST PMERR_INVALID_PATH_STATEMENT    = 01108H;
      CONST PMERR_NO_PROGRAM_FOUND          = 01109H;
      CONST PMERR_INVALID_BUFFER_SIZE       = 0110AH;
      CONST PMERR_BUFFER_TOO_SMALL          = 0110BH;
      CONST PMERR_PL_INITIALISATION_FAIL    = 0110CH;
      CONST PMERR_CANT_DESTROY_SYS_GROUP    = 0110DH;
      CONST PMERR_INVALID_TYPE_CHANGE       = 0110EH;
      CONST PMERR_INVALID_PROGRAM_HANDLE    = 0110FH;

      CONST PMERR_NOT_CURRENT_PL_VERSION    = 01110H;
      CONST PMERR_INVALID_CIRCULAR_REF      = 01111H;
      CONST PMERR_MEMORY_ALLOCATION_ERR     = 01112H;
      CONST PMERR_MEMORY_DEALLOCATION_ERR   = 01113H;
      CONST PMERR_TASK_HEADER_TOO_BIG       = 01114H;

      CONST PMERR_INVALID_INI_FILE_HANDLE   = 01115H;
      CONST PMERR_MEMORY_SHARE              = 01116H;
      CONST PMERR_OPEN_QUEUE                = 01117H;
      CONST PMERR_CREATE_QUEUE              = 01118H;
      CONST PMERR_WRITE_QUEUE               = 01119H;
      CONST PMERR_READ_QUEUE                = 0111AH;
      CONST PMERR_CALL_NOT_EXECUTED         = 0111BH;
      CONST PMERR_UNKNOWN_APIPKT            = 0111CH;
      CONST PMERR_INITHREAD_EXISTS          = 0111DH;
      CONST PMERR_CREATE_THREAD             = 0111EH;
      CONST PMERR_NO_HK_PROFILE_INSTALLED   = 0111FH;
      CONST PMERR_INVALID_DIRECTORY         = 01120H;
      CONST PMERR_WILDCARD_IN_FILENAME      = 01121H;
      CONST PMERR_FILENAME_BUFFER_FULL      = 01122H;
      CONST PMERR_FILENAME_TOO_LONG         = 01123H;
      CONST PMERR_INI_FILE_IS_SYS_OR_USER   = 01124H;
      CONST PMERR_BROADCAST_PLMSG           = 01125H;
      CONST PMERR_190_INIT_DONE             = 01126H;
      CONST PMERR_HMOD_FOR_PMSHAPI          = 01127H;
      CONST PMERR_SET_HK_PROFILE            = 01128H;
      CONST PMERR_API_NOT_ALLOWED           = 01129H;
      CONST PMERR_INI_STILL_OPEN            = 0112AH;

      CONST PMERR_PROGDETAILS_NOT_IN_INI    = 0112BH;
      CONST PMERR_PIBSTRUCT_NOT_IN_INI      = 0112CH;
      CONST PMERR_INVALID_DISKPROGDETAILS   = 0112DH;
      CONST PMERR_PROGDETAILS_READ_FAILURE  = 0112EH;
      CONST PMERR_PROGDETAILS_WRITE_FAILURE = 0112FH;
      CONST PMERR_PROGDETAILS_QSIZE_FAILURE = 01130H;
      CONST PMERR_INVALID_PROGDETAILS       = 01131H;
      CONST PMERR_SHEPROFILEHOOK_NOT_FOUND  = 01132H;
      CONST PMERR_190PLCONVERTED            = 01133H;
      CONST PMERR_FAILED_TO_CONVERT_INI_PL  = 01134H;
      CONST PMERR_PMSHAPI_NOT_INITIALISED   = 01135H;
      CONST PMERR_INVALID_SHELL_API_HOOK_ID = 01136H;

      CONST PMERR_DOS_ERROR                 = 01200H;

      CONST PMERR_NO_SPACE                  = 01201H;
      CONST PMERR_INVALID_SWITCH_HANDLE     = 01202H;
      CONST PMERR_NO_HANDLE                 = 01203H;
      CONST PMERR_INVALID_PROCESS_ID        = 01204H;
      CONST PMERR_NOT_SHELL                 = 01205H;
      CONST PMERR_INVALID_WINDOW            = 01206H;
      CONST PMERR_INVALID_POST_MSG          = 01207H;
      CONST PMERR_INVALID_PARAMETERS        = 01208H;
      CONST PMERR_INVALID_PROGRAM_TYPE      = 01209H;
      CONST PMERR_NOT_EXTENDED_FOCUS        = 0120AH;
      CONST PMERR_INVALID_SESSION_ID        = 0120BH;
      CONST PMERR_SMG_INVALID_ICON_FILE     = 0120CH;
      CONST PMERR_SMG_ICON_NOT_CREATED      = 0120DH;
      CONST PMERR_SHL_DEBUG                 = 0120EH;

      CONST PMERR_OPENING_INI_FILE          = 01301H;
      CONST PMERR_INI_FILE_CORRUPT          = 01302H;
      CONST PMERR_INVALID_PARM              = 01303H;
      CONST PMERR_NOT_IN_IDX                = 01304H;
      CONST PMERR_NO_ENTRIES_IN_GROUP       = 01305H;

      CONST PMERR_INI_WRITE_FAIL            = 01306H;
      CONST PMERR_IDX_FULL                  = 01307H;
      CONST PMERR_INI_PROTECTED             = 01308H;
      CONST PMERR_MEMORY_ALLOC              = 01309H;
      CONST PMERR_INI_INIT_ALREADY_DONE     = 0130AH;
      CONST PMERR_INVALID_INTEGER           = 0130BH;
      CONST PMERR_INVALID_ASCIIZ            = 0130CH;
      CONST PMERR_CAN_NOT_CALL_SPOOLER      = 0130DH;
      CONST PMERR_VALIDATION_REJECTED       = PMERR_CAN_NOT_CALL_SPOOLER;

      CONST PMERR_WARNING_WINDOW_NOT_KILLED = 01401H;
      CONST PMERR_ERROR_INVALID_WINDOW      = 01402H;
      CONST PMERR_ALREADY_INITIALIZED       = 01403H;
      CONST PMERR_MSG_PROG_NO_MOU           = 01405H;
      CONST PMERR_MSG_PROG_NON_RECOV        = 01406H;
      CONST PMERR_WINCONV_INVALID_PATH      = 01407H;
      CONST PMERR_PI_NOT_INITIALISED        = 01408H;
      CONST PMERR_PL_NOT_INITIALISED        = 01409H;
      CONST PMERR_NO_TASK_MANAGER           = 0140AH;
      CONST PMERR_SAVE_NOT_IN_PROGRESS      = 0140BH;
      CONST PMERR_NO_STACK_SPACE            = 0140CH;
      CONST PMERR_INVALID_COLR_FIELD        = 0140dH;
      CONST PMERR_INVALID_COLR_VALUE        = 0140eH;
      CONST PMERR_COLR_WRITE                = 0140fH;

      CONST PMERR_TARGET_FILE_EXISTS        = 01501H;
      CONST PMERR_SOURCE_SAME_AS_TARGET     = 01502H;
      CONST PMERR_SOURCE_FILE_NOT_FOUND     = 01503H;
      CONST PMERR_INVALID_NEW_PATH          = 01504H;
      CONST PMERR_TARGET_FILE_NOT_FOUND     = 01505H;
      CONST PMERR_INVALID_DRIVE_NUMBER      = 01506H;
      CONST PMERR_NAME_TOO_LONG             = 01507H;
      CONST PMERR_NOT_ENOUGH_ROOM_ON_DISK   = 01508H;
      CONST PMERR_NOT_ENOUGH_MEM            = 01509H;

      CONST PMERR_LOG_DRV_DOES_NOT_EXIST    = 0150BH;
      CONST PMERR_INVALID_DRIVE             = 0150CH;
      CONST PMERR_ACCESS_DENIED             = 0150DH;
      CONST PMERR_NO_FIRST_SLASH            = 0150EH;
      CONST PMERR_READ_ONLY_FILE            = 0150FH;
      CONST PMERR_GROUP_PROTECTED           = 0151FH;
      CONST PMERR_INVALID_PROGRAM_CATEGORY  = 0152FH;
      CONST PMERR_INVALID_APPL              = 01530H;
      CONST PMERR_CANNOT_START              = 01531H;
      CONST PMERR_STARTED_IN_BACKGROUND     = 01532H;
      CONST PMERR_INVALID_HAPP              = 01533H;
      CONST PMERR_CANNOT_STOP               = 01534H;

      (**********************************************************************
      * Errors generated by Language Bindings layer.
      *
      * (Range 01600 thru 016FF reserved for Bindings)
      **********************************************************************)

      (*** SEVERITY_UNRECOVERABLE ***)
      CONST PMERR_INTERNAL_ERROR_1          = 01601H;
      CONST PMERR_INTERNAL_ERROR_2          = 01602H;
      CONST PMERR_INTERNAL_ERROR_3          = 01603H;
      CONST PMERR_INTERNAL_ERROR_4          = 01604H;
      CONST PMERR_INTERNAL_ERROR_5          = 01605H;
      CONST PMERR_INTERNAL_ERROR_6          = 01606H;
      CONST PMERR_INTERNAL_ERROR_7          = 01607H;
      CONST PMERR_INTERNAL_ERROR_8          = 01608H;
      CONST PMERR_INTERNAL_ERROR_9          = 01609H;
      CONST PMERR_INTERNAL_ERROR_10         = 0160AH;
      CONST PMERR_INTERNAL_ERROR_11         = 0160BH;
      CONST PMERR_INTERNAL_ERROR_12         = 0160CH;
      CONST PMERR_INTERNAL_ERROR_13         = 0160DH;
      CONST PMERR_INTERNAL_ERROR_14         = 0160EH;
      CONST PMERR_INTERNAL_ERROR_15         = 0160FH;
      CONST PMERR_INTERNAL_ERROR_16         = 01610H;
      CONST PMERR_INTERNAL_ERROR_17         = 01611H;
      CONST PMERR_INTERNAL_ERROR_18         = 01612H;
      CONST PMERR_INTERNAL_ERROR_19         = 01613H;
      CONST PMERR_INTERNAL_ERROR_20         = 01614H;
      CONST PMERR_INTERNAL_ERROR_21         = 01615H;
      CONST PMERR_INTERNAL_ERROR_22         = 01616H;
      CONST PMERR_INTERNAL_ERROR_23         = 01617H;
      CONST PMERR_INTERNAL_ERROR_24         = 01618H;
      CONST PMERR_INTERNAL_ERROR_25         = 01619H;
      CONST PMERR_INTERNAL_ERROR_26         = 0161AH;
      CONST PMERR_INTERNAL_ERROR_27         = 0161BH;
      CONST PMERR_INTERNAL_ERROR_28         = 0161CH;
      CONST PMERR_INTERNAL_ERROR_29         = 0161DH;

      (*** SEVERITY_WARNING ***)
      CONST PMERR_INVALID_FREE_MESSAGE_ID   = 01630H;

      (*** SEVERITY_ERROR ***)

      CONST PMERR_FUNCTION_NOT_SUPPORTED    = 01641H;
      CONST PMERR_INVALID_ARRAY_COUNT       = 01642H;
      CONST PMERR_INVALID_LENGTH            = 01643H;
      CONST PMERR_INVALID_BUNDLE_TYPE       = 01644H;
      CONST PMERR_INVALID_PARAMETER         = 01645H;
      CONST PMERR_INVALID_NUMBER_OF_PARMS   = 01646H;
      CONST PMERR_GREATER_THAN_64K          = 01647H;
      CONST PMERR_INVALID_PARAMETER_TYPE    = 01648H;
      CONST PMERR_NEGATIVE_STRCOND_DIM      = 01649H;
      CONST PMERR_INVALID_NUMBER_OF_TYPES   = 0164AH;
      CONST PMERR_INCORRECT_HSTRUCT         = 0164BH;
      CONST PMERR_INVALID_ARRAY_SIZE        = 0164CH;
      CONST PMERR_INVALID_CONTROL_DATATYPE  = 0164DH;
      CONST PMERR_INCOMPLETE_CONTROL_SEQU   = 0164EH;
      CONST PMERR_INVALID_DATATYPE          = 0164FH;
      CONST PMERR_INCORRECT_DATATYPE        = 01650H;
      CONST PMERR_NOT_SELF_DESCRIBING_DTYP  = 01651H;
      CONST PMERR_INVALID_CTRL_SEQ_INDEX    = 01652H;
      CONST PMERR_INVALID_TYPE_FOR_LENGTH   = 01653H;
      CONST PMERR_INVALID_TYPE_FOR_OFFSET   = 01654H;
      CONST PMERR_INVALID_TYPE_FOR_MPARAM   = 01655H;
      CONST PMERR_INVALID_MESSAGE_ID        = 01656H;
      CONST PMERR_C_LENGTH_TOO_SMALL        = 01657H;
      CONST PMERR_APPL_STRUCTURE_TOO_SMALL  = 01658H;
      CONST PMERR_INVALID_ERRORINFO_HANDLE  = 01659H;
      CONST PMERR_INVALID_CHARACTER_INDEX   = 0165AH;

      (**********************************************************************
      * End of Errors generated by Language Bindings layer.
      *
      * (Range 01600 thru 016FF reserved for Bindings)
      **********************************************************************)
   #endif (* error codes already included *)
#endif (* include error codes *)

(**********************************************************************\
*
*            Workplace Shell error codes
*
* PMWP error codes
*
\**********************************************************************)

#if defined(INCL_WPERRORS)

   #if ! defined(INCL_WPERRORS_INCL)
      (* XLATOFF *)
      #define INCL_WPERRORS_INCL
      (* XLATON *)

      CONST WPERR_PROTECTED_CLASS           = 01700H;
      CONST WPERR_INVALID_CLASS             = 01701H;
      CONST WPERR_INVALID_SUPERCLASS        = 01702H;
      CONST WPERR_NO_MEMORY                 = 01703H;
      CONST WPERR_SEMAPHORE_ERROR           = 01704H;
      CONST WPERR_BUFFER_TOO_SMALL          = 01705H;
      CONST WPERR_CLSLOADMOD_FAILED         = 01706H;
      CONST WPERR_CLSPROCADDR_FAILED        = 01707H;
      CONST WPERR_OBJWORD_LOCATION          = 01708H;
      CONST WPERR_INVALID_OBJECT            = 01709H;
      CONST WPERR_MEMORY_CLEANUP            = 0170AH;
      CONST WPERR_INVALID_MODULE            = 0170BH;
      CONST WPERR_INVALID_OLDCLASS          = 0170CH;
      CONST WPERR_INVALID_NEWCLASS          = 0170DH;
      CONST WPERR_NOT_IMMEDIATE_CHILD       = 0170EH;
      CONST WPERR_NOT_WORKPLACE_CLASS       = 0170FH;
      CONST WPERR_CANT_REPLACE_METACLS      = 01710H;
      CONST WPERR_INI_FILE_WRITE            = 01711H;
      CONST WPERR_INVALID_FOLDER            = 01712H;
      CONST WPERR_BUFFER_OVERFLOW           = 01713H;
      CONST WPERR_OBJECT_NOT_FOUND          = 01714H;
      CONST WPERR_INVALID_HFIND             = 01715H;
      CONST WPERR_INVALID_COUNT             = 01716H;
      CONST WPERR_INVALID_BUFFER            = 01717H;
      CONST WPERR_ALREADY_EXISTS            = 01718H;
      CONST WPERR_INVALID_FLAGS             = 01719H;
      CONST WPERR_INVALID_OBJECTID          = 01720H;

   #endif (* error codes already included *)
#endif (* include error codes *)


(********************************************************************
*** GPI error codes
********************************************************************)
#ifdef INCL_GPIERRORS
   #ifndef INCL_GPIERRORS_INCL
      (* XLATOFF *)
      #define INCL_GPIERRORS_INCL
      (* XLATON *)

      (* AAB error codes for the GPI *)
      CONST PMERR_OK                          = 00000H;
      CONST PMERR_ALREADY_IN_AREA             = 02001H;
      CONST PMERR_ALREADY_IN_ELEMENT          = 02002H;
      CONST PMERR_ALREADY_IN_PATH             = 02003H;
      CONST PMERR_ALREADY_IN_SEG              = 02004H;
      CONST PMERR_AREA_INCOMPLETE             = 02005H;
      CONST PMERR_BASE_ERROR                  = 02006H;
      CONST PMERR_BITBLT_LENGTH_EXCEEDED      = 02007H;
      CONST PMERR_BITMAP_IN_USE               = 02008H;
      CONST PMERR_BITMAP_IS_SELECTED          = 02009H;
      CONST PMERR_BITMAP_NOT_FOUND            = 0200AH;
      CONST PMERR_BITMAP_NOT_SELECTED         = 0200BH;
      CONST PMERR_BOUNDS_OVERFLOW             = 0200CH;
      CONST PMERR_CALLED_SEG_IS_CHAINED       = 0200DH;
      CONST PMERR_CALLED_SEG_IS_CURRENT       = 0200EH;
      CONST PMERR_CALLED_SEG_NOT_FOUND        = 0200FH;
      CONST PMERR_CANNOT_DELETE_ALL_DATA      = 02010H;
      CONST PMERR_CANNOT_REPLACE_ELEMENT_0    = 02011H;
      CONST PMERR_COL_TABLE_NOT_REALIZABLE    = 02012H;
      CONST PMERR_COL_TABLE_NOT_REALIZED      = 02013H;
      CONST PMERR_COORDINATE_OVERFLOW         = 02014H;
      CONST PMERR_CORR_FORMAT_MISMATCH        = 02015H;
      CONST PMERR_DATA_TOO_LONG               = 02016H;
      CONST PMERR_DC_IS_ASSOCIATED            = 02017H;
      CONST PMERR_DESC_STRING_TRUNCATED       = 02018H;
      CONST PMERR_DEVICE_DRIVER_ERROR_1       = 02019H;
      CONST PMERR_DEVICE_DRIVER_ERROR_2       = 0201AH;
      CONST PMERR_DEVICE_DRIVER_ERROR_3       = 0201BH;
      CONST PMERR_DEVICE_DRIVER_ERROR_4       = 0201CH;
      CONST PMERR_DEVICE_DRIVER_ERROR_5       = 0201DH;
      CONST PMERR_DEVICE_DRIVER_ERROR_6       = 0201EH;
      CONST PMERR_DEVICE_DRIVER_ERROR_7       = 0201FH;
      CONST PMERR_DEVICE_DRIVER_ERROR_8       = 02020H;
      CONST PMERR_DEVICE_DRIVER_ERROR_9       = 02021H;
      CONST PMERR_DEVICE_DRIVER_ERROR_10      = 02022H;
      CONST PMERR_DEV_FUNC_NOT_INSTALLED      = 02023H;
      CONST PMERR_DOSOPEN_FAILURE             = 02024H;
      CONST PMERR_DOSREAD_FAILURE             = 02025H;
      CONST PMERR_DRIVER_NOT_FOUND            = 02026H;
      CONST PMERR_DUP_SEG                     = 02027H;
      CONST PMERR_DYNAMIC_SEG_SEQ_ERROR       = 02028H;
      CONST PMERR_DYNAMIC_SEG_ZERO_INV        = 02029H;
      CONST PMERR_ELEMENT_INCOMPLETE          = 0202AH;
      CONST PMERR_ESC_CODE_NOT_SUPPORTED      = 0202BH;
      CONST PMERR_EXCEEDS_MAX_SEG_LENGTH      = 0202CH;
      CONST PMERR_FONT_AND_MODE_MISMATCH      = 0202DH;
      CONST PMERR_FONT_FILE_NOT_LOADED        = 0202EH;
      CONST PMERR_FONT_NOT_LOADED             = 0202FH;
      CONST PMERR_FONT_TOO_BIG                = 02030H;
      CONST PMERR_HARDWARE_INIT_FAILURE       = 02031H;
      CONST PMERR_HBITMAP_BUSY                = 02032H;
      CONST PMERR_HDC_BUSY                    = 02033H;
      CONST PMERR_HRGN_BUSY                   = 02034H;
      CONST PMERR_HUGE_FONTS_NOT_SUPPORTED    = 02035H;
      CONST PMERR_ID_HAS_NO_BITMAP            = 02036H;
      CONST PMERR_IMAGE_INCOMPLETE            = 02037H;
      CONST PMERR_INCOMPAT_COLOR_FORMAT       = 02038H;
      CONST PMERR_INCOMPAT_COLOR_OPTIONS      = 02039H;
      CONST PMERR_INCOMPATIBLE_BITMAP         = 0203AH;
      CONST PMERR_INCOMPATIBLE_METAFILE       = 0203BH;
      CONST PMERR_INCORRECT_DC_TYPE           = 0203CH;
      CONST PMERR_INSUFFICIENT_DISK_SPACE     = 0203DH;
      CONST PMERR_INSUFFICIENT_MEMORY         = 0203EH;
      CONST PMERR_INV_ANGLE_PARM              = 0203FH;
      CONST PMERR_INV_ARC_CONTROL             = 02040H;
      CONST PMERR_INV_AREA_CONTROL            = 02041H;
      CONST PMERR_INV_ARC_POINTS              = 02042H;
      CONST PMERR_INV_ATTR_MODE               = 02043H;
      CONST PMERR_INV_BACKGROUND_COL_ATTR     = 02044H;
      CONST PMERR_INV_BACKGROUND_MIX_ATTR     = 02045H;
      CONST PMERR_INV_BITBLT_MIX              = 02046H;
      CONST PMERR_INV_BITBLT_STYLE            = 02047H;
      CONST PMERR_INV_BITMAP_DIMENSION        = 02048H;
      CONST PMERR_INV_BOX_CONTROL             = 02049H;
      CONST PMERR_INV_BOX_ROUNDING_PARM       = 0204AH;
      CONST PMERR_INV_CHAR_ANGLE_ATTR         = 0204BH;
      CONST PMERR_INV_CHAR_DIRECTION_ATTR     = 0204CH;
      CONST PMERR_INV_CHAR_MODE_ATTR          = 0204DH;
      CONST PMERR_INV_CHAR_POS_OPTIONS        = 0204EH;
      CONST PMERR_INV_CHAR_SET_ATTR           = 0204FH;
      CONST PMERR_INV_CHAR_SHEAR_ATTR         = 02050H;
      CONST PMERR_INV_CLIP_PATH_OPTIONS       = 02051H;
      CONST PMERR_INV_CODEPAGE                = 02052H;
      CONST PMERR_INV_COLOR_ATTR              = 02053H;
      CONST PMERR_INV_COLOR_DATA              = 02054H;
      CONST PMERR_INV_COLOR_FORMAT            = 02055H;
      CONST PMERR_INV_COLOR_INDEX             = 02056H;
      CONST PMERR_INV_COLOR_OPTIONS           = 02057H;
      CONST PMERR_INV_COLOR_START_INDEX       = 02058H;
      CONST PMERR_INV_COORD_OFFSET            = 02059H;
      CONST PMERR_INV_COORD_SPACE             = 0205AH;
      CONST PMERR_INV_COORDINATE              = 0205BH;
      CONST PMERR_INV_CORRELATE_DEPTH         = 0205CH;
      CONST PMERR_INV_CORRELATE_TYPE          = 0205DH;
      CONST PMERR_INV_CURSOR_BITMAP           = 0205EH;
      CONST PMERR_INV_DC_DATA                 = 0205FH;
      CONST PMERR_INV_DC_TYPE                 = 02060H;
      CONST PMERR_INV_DEVICE_NAME             = 02061H;
      CONST PMERR_INV_DEV_MODES_OPTIONS       = 02062H;
      CONST PMERR_INV_DRAW_CONTROL            = 02063H;
      CONST PMERR_INV_DRAW_VALUE              = 02064H;
      CONST PMERR_INV_DRAWING_MODE            = 02065H;
      CONST PMERR_INV_DRIVER_DATA             = 02066H;
      CONST PMERR_INV_DRIVER_NAME             = 02067H;
      CONST PMERR_INV_DRAW_BORDER_OPTION      = 02068H;
      CONST PMERR_INV_EDIT_MODE               = 02069H;
      CONST PMERR_INV_ELEMENT_OFFSET          = 0206AH;
      CONST PMERR_INV_ELEMENT_POINTER         = 0206BH;
      CONST PMERR_INV_END_PATH_OPTIONS        = 0206CH;
      CONST PMERR_INV_ESC_CODE                = 0206DH;
      CONST PMERR_INV_ESCAPE_DATA             = 0206EH;
      CONST PMERR_INV_EXTENDED_LCID           = 0206FH;
      CONST PMERR_INV_FILL_PATH_OPTIONS       = 02070H;
      CONST PMERR_INV_FIRST_CHAR              = 02071H;
      CONST PMERR_INV_FONT_ATTRS              = 02072H;
      CONST PMERR_INV_FONT_FILE_DATA          = 02073H;
      CONST PMERR_INV_FOR_THIS_DC_TYPE        = 02074H;
      CONST PMERR_INV_FORMAT_CONTROL          = 02075H;
      CONST PMERR_INV_FORMS_CODE              = 02076H;
      CONST PMERR_INV_FONTDEF                 = 02077H;
      CONST PMERR_INV_GEOM_LINE_WIDTH_ATTR    = 02078H;
      CONST PMERR_INV_GETDATA_CONTROL         = 02079H;
      CONST PMERR_INV_GRAPHICS_FIELD          = 0207AH;
      CONST PMERR_INV_HBITMAP                 = 0207BH;
      CONST PMERR_INV_HDC                     = 0207CH;
      CONST PMERR_INV_HJOURNAL                = 0207DH;
      CONST PMERR_INV_HMF                     = 0207EH;
      CONST PMERR_INV_HPS                     = 0207FH;
      CONST PMERR_INV_HRGN                    = 02080H;
      CONST PMERR_INV_ID                      = 02081H;
      CONST PMERR_INV_IMAGE_DATA_LENGTH       = 02082H;
      CONST PMERR_INV_IMAGE_DIMENSION         = 02083H;
      CONST PMERR_INV_IMAGE_FORMAT            = 02084H;
      CONST PMERR_INV_IN_AREA                 = 02085H;
      CONST PMERR_INV_IN_CALLED_SEG           = 02086H;
      CONST PMERR_INV_IN_CURRENT_EDIT_MODE    = 02087H;
      CONST PMERR_INV_IN_DRAW_MODE            = 02088H;
      CONST PMERR_INV_IN_ELEMENT              = 02089H;
      CONST PMERR_INV_IN_IMAGE                = 0208AH;
      CONST PMERR_INV_IN_PATH                 = 0208BH;
      CONST PMERR_INV_IN_RETAIN_MODE          = 0208CH;
      CONST PMERR_INV_IN_SEG                  = 0208DH;
      CONST PMERR_INV_IN_VECTOR_SYMBOL        = 0208EH;
      CONST PMERR_INV_INFO_TABLE              = 0208FH;
      CONST PMERR_INV_JOURNAL_OPTION          = 02090H;
      CONST PMERR_INV_KERNING_FLAGS           = 02091H;
      CONST PMERR_INV_LENGTH_OR_COUNT         = 02092H;
      CONST PMERR_INV_LINE_END_ATTR           = 02093H;
      CONST PMERR_INV_LINE_JOIN_ATTR          = 02094H;
      CONST PMERR_INV_LINE_TYPE_ATTR          = 02095H;
      CONST PMERR_INV_LINE_WIDTH_ATTR         = 02096H;
      CONST PMERR_INV_LOGICAL_ADDRESS         = 02097H;
      CONST PMERR_INV_MARKER_BOX_ATTR         = 02098H;
      CONST PMERR_INV_MARKER_SET_ATTR         = 02099H;
      CONST PMERR_INV_MARKER_SYMBOL_ATTR      = 0209AH;
      CONST PMERR_INV_MATRIX_ELEMENT          = 0209BH;
      CONST PMERR_INV_MAX_HITS                = 0209CH;
      CONST PMERR_INV_METAFILE                = 0209DH;
      CONST PMERR_INV_METAFILE_LENGTH         = 0209EH;
      CONST PMERR_INV_METAFILE_OFFSET         = 0209FH;
      CONST PMERR_INV_MICROPS_DRAW_CONTROL    = 020A0H;
      CONST PMERR_INV_MICROPS_FUNCTION        = 020A1H;
      CONST PMERR_INV_MICROPS_ORDER           = 020A2H;
      CONST PMERR_INV_MIX_ATTR                = 020A3H;
      CONST PMERR_INV_MODE_FOR_OPEN_DYN       = 020A4H;
      CONST PMERR_INV_MODE_FOR_REOPEN_SEG     = 020A5H;
      CONST PMERR_INV_MODIFY_PATH_MODE        = 020A6H;
      CONST PMERR_INV_MULTIPLIER              = 020A7H;
      CONST PMERR_INV_NESTED_FIGURES          = 020A8H;
      CONST PMERR_INV_OR_INCOMPAT_OPTIONS     = 020A9H;
      CONST PMERR_INV_ORDER_LENGTH            = 020AAH;
      CONST PMERR_INV_ORDERING_PARM           = 020ABH;
      CONST PMERR_INV_OUTSIDE_DRAW_MODE       = 020ACH;
      CONST PMERR_INV_PAGE_VIEWPORT           = 020ADH;
      CONST PMERR_INV_PATH_ID                 = 020AEH;
      CONST PMERR_INV_PATH_MODE               = 020AFH;
      CONST PMERR_INV_PATTERN_ATTR            = 020B0H;
      CONST PMERR_INV_PATTERN_REF_PT_ATTR     = 020B1H;
      CONST PMERR_INV_PATTERN_SET_ATTR        = 020B2H;
      CONST PMERR_INV_PATTERN_SET_FONT        = 020B3H;
      CONST PMERR_INV_PICK_APERTURE_OPTION    = 020B4H;
      CONST PMERR_INV_PICK_APERTURE_POSN      = 020B5H;
      CONST PMERR_INV_PICK_APERTURE_SIZE      = 020B6H;
      CONST PMERR_INV_PICK_NUMBER             = 020B7H;
      CONST PMERR_INV_PLAY_METAFILE_OPTION    = 020B8H;
      CONST PMERR_INV_PRIMITIVE_TYPE          = 020B9H;
      CONST PMERR_INV_PS_SIZE                 = 020BAH;
      CONST PMERR_INV_PUTDATA_FORMAT          = 020BBH;
      CONST PMERR_INV_QUERY_ELEMENT_NO        = 020BCH;
      CONST PMERR_INV_RECT                    = 020BDH;
      CONST PMERR_INV_REGION_CONTROL          = 020BEH;
      CONST PMERR_INV_REGION_MIX_MODE         = 020BFH;
      CONST PMERR_INV_REPLACE_MODE_FUNC       = 020C0H;
      CONST PMERR_INV_RESERVED_FIELD          = 020C1H;
      CONST PMERR_INV_RESET_OPTIONS           = 020C2H;
      CONST PMERR_INV_RGBCOLOR                = 020C3H;
      CONST PMERR_INV_SCAN_START              = 020C4H;
      CONST PMERR_INV_SEG_ATTR                = 020C5H;
      CONST PMERR_INV_SEG_ATTR_VALUE          = 020C6H;
      CONST PMERR_INV_SEG_CH_LENGTH           = 020C7H;
      CONST PMERR_INV_SEG_NAME                = 020C8H;
      CONST PMERR_INV_SEG_OFFSET              = 020C9H;
      CONST PMERR_INV_SETID                   = 020CAH;
      CONST PMERR_INV_SETID_TYPE              = 020CBH;
      CONST PMERR_INV_SET_VIEWPORT_OPTION     = 020CCH;
      CONST PMERR_INV_SHARPNESS_PARM          = 020CDH;
      CONST PMERR_INV_SOURCE_OFFSET           = 020CEH;
      CONST PMERR_INV_STOP_DRAW_VALUE         = 020CFH;
      CONST PMERR_INV_TRANSFORM_TYPE          = 020D0H;
      CONST PMERR_INV_USAGE_PARM              = 020D1H;
      CONST PMERR_INV_VIEWING_LIMITS          = 020D2H;
      CONST PMERR_JFILE_BUSY                  = 020D3H;
      CONST PMERR_JNL_FUNC_DATA_TOO_LONG      = 020D4H;
      CONST PMERR_KERNING_NOT_SUPPORTED       = 020D5H;
      CONST PMERR_LABEL_NOT_FOUND             = 020D6H;
      CONST PMERR_MATRIX_OVERFLOW             = 020D7H;
      CONST PMERR_METAFILE_INTERNAL_ERROR     = 020D8H;
      CONST PMERR_METAFILE_IN_USE             = 020D9H;
      CONST PMERR_METAFILE_LIMIT_EXCEEDED     = 020DAH;
      CONST PMERR_NAME_STACK_FULL             = 020DBH;
      CONST PMERR_NOT_CREATED_BY_DEVOPENDC    = 020DCH;
      CONST PMERR_NOT_IN_AREA                 = 020DDH;
      CONST PMERR_NOT_IN_DRAW_MODE            = 020DEH;
      CONST PMERR_NOT_IN_ELEMENT              = 020DFH;
      CONST PMERR_NOT_IN_IMAGE                = 020E0H;
      CONST PMERR_NOT_IN_PATH                 = 020E1H;
      CONST PMERR_NOT_IN_RETAIN_MODE          = 020E2H;
      CONST PMERR_NOT_IN_SEG                  = 020E3H;
      CONST PMERR_NO_BITMAP_SELECTED          = 020E4H;
      CONST PMERR_NO_CURRENT_ELEMENT          = 020E5H;
      CONST PMERR_NO_CURRENT_SEG              = 020E6H;
      CONST PMERR_NO_METAFILE_RECORD_HANDLE   = 020E7H;
      CONST PMERR_ORDER_TOO_BIG               = 020E8H;
      CONST PMERR_OTHER_SET_ID_REFS           = 020E9H;
      CONST PMERR_OVERRAN_SEG                 = 020EAH;
      CONST PMERR_OWN_SET_ID_REFS             = 020EBH;
      CONST PMERR_PATH_INCOMPLETE             = 020ECH;
      CONST PMERR_PATH_LIMIT_EXCEEDED         = 020EDH;
      CONST PMERR_PATH_UNKNOWN                = 020EEH;
      CONST PMERR_PEL_IS_CLIPPED              = 020EFH;
      CONST PMERR_PEL_NOT_AVAILABLE           = 020F0H;
      CONST PMERR_PRIMITIVE_STACK_EMPTY       = 020F1H;
      CONST PMERR_PROLOG_ERROR                = 020F2H;
      CONST PMERR_PROLOG_SEG_ATTR_NOT_SET     = 020F3H;
      CONST PMERR_PS_BUSY                     = 020F4H;
      CONST PMERR_PS_IS_ASSOCIATED            = 020F5H;
      CONST PMERR_RAM_JNL_FILE_TOO_SMALL      = 020F6H;
      CONST PMERR_REALIZE_NOT_SUPPORTED       = 020F7H;
      CONST PMERR_REGION_IS_CLIP_REGION       = 020F8H;
      CONST PMERR_RESOURCE_DEPLETION          = 020F9H;
      CONST PMERR_SEG_AND_REFSEG_ARE_SAME     = 020FAH;
      CONST PMERR_SEG_CALL_RECURSIVE          = 020FBH;
      CONST PMERR_SEG_CALL_STACK_EMPTY        = 020FCH;
      CONST PMERR_SEG_CALL_STACK_FULL         = 020FDH;
      CONST PMERR_SEG_IS_CURRENT              = 020FEH;
      CONST PMERR_SEG_NOT_CHAINED             = 020FFH;
      CONST PMERR_SEG_NOT_FOUND               = 02100H;
      CONST PMERR_SEG_STORE_LIMIT_EXCEEDED    = 02101H;
      CONST PMERR_SETID_IN_USE                = 02102H;
      CONST PMERR_SETID_NOT_FOUND             = 02103H;
      CONST PMERR_STARTDOC_NOT_ISSUED         = 02104H;
      CONST PMERR_STOP_DRAW_OCCURRED          = 02105H;
      CONST PMERR_TOO_MANY_METAFILES_IN_USE   = 02106H;
      CONST PMERR_TRUNCATED_ORDER             = 02107H;
      CONST PMERR_UNCHAINED_SEG_ZERO_INV      = 02108H;
      CONST PMERR_UNSUPPORTED_ATTR            = 02109H;
      CONST PMERR_UNSUPPORTED_ATTR_VALUE      = 0210AH;
      CONST PMERR_ENDDOC_NOT_ISSUED           = 0210BH;
      CONST PMERR_PS_NOT_ASSOCIATED           = 0210CH;
      CONST PMERR_INV_FLOOD_FILL_OPTIONS      = 0210DH;
      CONST PMERR_INV_FACENAME                = 0210EH;
      CONST PMERR_PALETTE_SELECTED            = 0210FH;
      CONST PMERR_NO_PALETTE_SELECTED         = 02110H;
      CONST PMERR_INV_HPAL                    = 02111H;
      CONST PMERR_PALETTE_BUSY                = 02112H;
      CONST PMERR_START_POINT_CLIPPED         = 02113H;
      CONST PMERR_NO_FILL                     = 02114H;
      CONST PMERR_INV_FACENAMEDESC            = 02115H;
      CONST PMERR_INV_BITMAP_DATA             = 02116H;
      CONST PMERR_INV_CHAR_ALIGN_ATTR         = 02117H;
      CONST PMERR_INV_HFONT                   = 02118H;
      CONST PMERR_HFONT_IS_SELECTED           = 02119H;
      CONST PMERR_DRVR_NOT_SUPPORTED          = 02120H;

   #endif (* error codes already included *)
#endif (* include error codes *)

(****************************************************************************
*** Device Manager error codes
****************************************************************************)

(* None yet *)

(****************************************************************************
*** Spooler error codes
****************************************************************************)
#if defined(INCL_SPLERRORS)
   #if ! defined(INCL_SPLERRORS_INCL)
      (* XLATOFF *)
      #define INCL_SPLERRORS_INCL
      (* XLATON *)

      CONST PMERR_SPL_DRIVER_ERROR            = 04001H;
      CONST PMERR_SPL_DEVICE_ERROR            = 04002H;
      CONST PMERR_SPL_DEVICE_NOT_INSTALLED    = 04003H;
      CONST PMERR_SPL_QUEUE_ERROR             = 04004H;
      CONST PMERR_SPL_INV_HSPL                = 04005H;
      CONST PMERR_SPL_NO_DISK_SPACE           = 04006H;
      CONST PMERR_SPL_NO_MEMORY               = 04007H;
      CONST PMERR_SPL_PRINT_ABORT             = 04008H;
      CONST PMERR_SPL_SPOOLER_NOT_INSTALLED   = 04009H;
      CONST PMERR_SPL_INV_FORMS_CODE          = 0400AH;
      CONST PMERR_SPL_INV_PRIORITY            = 0400BH;
      CONST PMERR_SPL_NO_FREE_JOB_ID          = 0400CH;
      CONST PMERR_SPL_NO_DATA                 = 0400DH;
      CONST PMERR_SPL_INV_TOKEN               = 0400EH;
      CONST PMERR_SPL_INV_DATATYPE            = 0400FH;
      CONST PMERR_SPL_PROCESSOR_ERROR         = 04010H;
      CONST PMERR_SPL_INV_JOB_ID              = 04011H;
      CONST PMERR_SPL_JOB_NOT_PRINTING        = 04012H;
      CONST PMERR_SPL_JOB_PRINTING            = 04013H;
      CONST PMERR_SPL_QUEUE_ALREADY_EXISTS    = 04014H;
      CONST PMERR_SPL_INV_QUEUE_NAME          = 04015H;
      CONST PMERR_SPL_QUEUE_NOT_EMPTY         = 04016H;
      CONST PMERR_SPL_DEVICE_ALREADY_EXISTS   = 04017H;
      CONST PMERR_SPL_DEVICE_LIMIT_REACHED    = 04018H;
      CONST PMERR_SPL_STATUS_STRING_TRUNC     = 04019H;
      CONST PMERR_SPL_INV_LENGTH_OR_COUNT     = 0401AH;
      CONST PMERR_SPL_FILE_NOT_FOUND          = 0401BH;
      CONST PMERR_SPL_CANNOT_OPEN_FILE        = 0401CH;
      CONST PMERR_SPL_DRIVER_NOT_INSTALLED    = 0401DH;
      CONST PMERR_SPL_INV_PROCESSOR_DATTYPE   = 0401EH;
      CONST PMERR_SPL_INV_DRIVER_DATATYPE     = 0401FH;
      CONST PMERR_SPL_PROCESSOR_NOT_INST      = 04020H;
      CONST PMERR_SPL_NO_SUCH_LOG_ADDRESS     = 04021H;
      CONST PMERR_SPL_PRINTER_NOT_FOUND       = 04022H;
      CONST PMERR_SPL_DD_NOT_FOUND            = 04023H;
      CONST PMERR_SPL_QUEUE_NOT_FOUND         = 04024H;
      CONST PMERR_SPL_MANY_QUEUES_ASSOC       = 04025H;
      CONST PMERR_SPL_NO_QUEUES_ASSOCIATED    = 04026H;
      CONST PMERR_SPL_INI_FILE_ERROR          = 04027H;
      CONST PMERR_SPL_NO_DEFAULT_QUEUE        = 04028H;
      CONST PMERR_SPL_NO_CURRENT_FORMS_CODE   = 04029H;
      CONST PMERR_SPL_NOT_AUTHORISED          = 0402AH;
      CONST PMERR_SPL_TEMP_NETWORK_ERROR      = 0402BH;
      CONST PMERR_SPL_HARD_NETWORK_ERROR      = 0402CH;
      CONST PMERR_DEL_NOT_ALLOWED             = 0402DH;
      CONST PMERR_CANNOT_DEL_QP_REF           = 0402EH;
      CONST PMERR_CANNOT_DEL_QNAME_REF        = 0402FH;
      CONST PMERR_CANNOT_DEL_PRINTER_DD_REF   = 04030H;
      CONST PMERR_CANNOT_DEL_PRN_NAME_REF     = 04031H;
      CONST PMERR_CANNOT_DEL_PRN_ADDR_REF     = 04032H;
      CONST PMERR_SPOOLER_QP_NOT_DEFINED      = 04033H;
      CONST PMERR_PRN_NAME_NOT_DEFINED        = 04034H;
      CONST PMERR_PRN_ADDR_NOT_DEFINED        = 04035H;
      CONST PMERR_PRINTER_DD_NOT_DEFINED      = 04036H;
      CONST PMERR_PRINTER_QUEUE_NOT_DEFINED   = 04037H;
      CONST PMERR_PRN_ADDR_IN_USE             = 04038H;
      CONST PMERR_SPL_TOO_MANY_OPEN_FILES     = 04039H;
      CONST PMERR_SPL_CP_NOT_REQD             = 0403AH;
      CONST PMERR_UNABLE_TO_CLOSE_DEVICE      = 04040H;

      CONST PMERR_SPL_ERROR_1       =   ( SPLERR_BASE + 4001 );
      CONST PMERR_SPL_ERROR_2       =   ( SPLERR_BASE + 4002 );
      CONST PMERR_SPL_ERROR_3       =   ( SPLERR_BASE + 4003 );
      CONST PMERR_SPL_ERROR_4       =   ( SPLERR_BASE + 4004 );
      CONST PMERR_SPL_ERROR_5       =   ( SPLERR_BASE + 4005 );
      CONST PMERR_SPL_ERROR_6       =   ( SPLERR_BASE + 4006 );
      CONST PMERR_SPL_ERROR_7       =   ( SPLERR_BASE + 4007 );
      CONST PMERR_SPL_ERROR_8       =   ( SPLERR_BASE + 4008 );
      CONST PMERR_SPL_ERROR_9       =   ( SPLERR_BASE + 4009 );
      CONST PMERR_SPL_ERROR_10      =   ( SPLERR_BASE + 4010 );
      CONST PMERR_SPL_ERROR_11      =   ( SPLERR_BASE + 4011 );
      CONST PMERR_SPL_ERROR_12      =   ( SPLERR_BASE + 4012 );
      CONST PMERR_SPL_ERROR_13      =   ( SPLERR_BASE + 4013 );
      CONST PMERR_SPL_ERROR_14      =   ( SPLERR_BASE + 4014 );
      CONST PMERR_SPL_ERROR_15      =   ( SPLERR_BASE + 4015 );
      CONST PMERR_SPL_ERROR_16      =   ( SPLERR_BASE + 4016 );
      CONST PMERR_SPL_ERROR_17      =   ( SPLERR_BASE + 4017 );
      CONST PMERR_SPL_ERROR_18      =   ( SPLERR_BASE + 4018 );
      CONST PMERR_SPL_ERROR_19      =   ( SPLERR_BASE + 4019 );
      CONST PMERR_SPL_ERROR_20      =   ( SPLERR_BASE + 4020 );
      CONST PMERR_SPL_ERROR_21      =   ( SPLERR_BASE + 4021 );
      CONST PMERR_SPL_ERROR_22      =   ( SPLERR_BASE + 4022 );
      CONST PMERR_SPL_ERROR_23      =   ( SPLERR_BASE + 4023 );
      CONST PMERR_SPL_ERROR_24      =   ( SPLERR_BASE + 4024 );
      CONST PMERR_SPL_ERROR_25      =   ( SPLERR_BASE + 4025 );
      CONST PMERR_SPL_ERROR_26      =   ( SPLERR_BASE + 4026 );
      CONST PMERR_SPL_ERROR_27      =   ( SPLERR_BASE + 4027 );
      CONST PMERR_SPL_ERROR_28      =   ( SPLERR_BASE + 4028 );
      CONST PMERR_SPL_ERROR_29      =   ( SPLERR_BASE + 4029 );
      CONST PMERR_SPL_ERROR_30      =   ( SPLERR_BASE + 4030 );
      CONST PMERR_SPL_ERROR_31      =   ( SPLERR_BASE + 4031 );
      CONST PMERR_SPL_ERROR_32      =   ( SPLERR_BASE + 4032 );
      CONST PMERR_SPL_ERROR_33      =   ( SPLERR_BASE + 4033 );
      CONST PMERR_SPL_ERROR_34      =   ( SPLERR_BASE + 4034 );
      CONST PMERR_SPL_ERROR_35      =   ( SPLERR_BASE + 4035 );
      CONST PMERR_SPL_ERROR_36      =   ( SPLERR_BASE + 4036 );
      CONST PMERR_SPL_ERROR_37      =   ( SPLERR_BASE + 4037 );
      CONST PMERR_SPL_ERROR_38      =   ( SPLERR_BASE + 4038 );
      CONST PMERR_SPL_ERROR_39      =   ( SPLERR_BASE + 4039 );
      CONST PMERR_SPL_ERROR_40      =   ( SPLERR_BASE + 4040 );

      CONST PMERR_SPLMSGBOX_INFO_CAPTION   = ( SPLERR_BASE + 4041 );
      CONST PMERR_SPLMSGBOX_WARNING_CAPTION= ( SPLERR_BASE + 4042 );
      CONST PMERR_SPLMSGBOX_ERROR_CAPTION  = ( SPLERR_BASE + 4043 );
      CONST PMERR_SPLMSGBOX_SEVERE_CAPTION = ( SPLERR_BASE + 4044 );

      CONST PMERR_SPLMSGBOX_JOB_DETAILS    = ( SPLERR_BASE + 4045 );

      CONST PMERR_SPLMSGBOX_ERROR_ACTION   = ( SPLERR_BASE + 4046 );
      CONST PMERR_SPLMSGBOX_SEVERE_ACTION  = ( SPLERR_BASE + 4047 );

      CONST PMERR_SPLMSGBOX_BIT_0_TEXT     = ( SPLERR_BASE + 4048 );
      CONST PMERR_SPLMSGBOX_BIT_1_TEXT     = ( SPLERR_BASE + 4049 );
      CONST PMERR_SPLMSGBOX_BIT_2_TEXT     = ( SPLERR_BASE + 4050 );
      CONST PMERR_SPLMSGBOX_BIT_3_TEXT     = ( SPLERR_BASE + 4051 );
      CONST PMERR_SPLMSGBOX_BIT_4_TEXT     = ( SPLERR_BASE + 4052 );
      CONST PMERR_SPLMSGBOX_BIT_5_TEXT     = ( SPLERR_BASE + 4053 );
      CONST PMERR_SPLMSGBOX_BIT_15_TEXT    = ( SPLERR_BASE + 4054 );
      CONST PMERR_SPL_NOPATHBUFFER         = ( SPLERR_BASE + 4055 );

      CONST PMERR_SPL_ALREADY_INITIALISED  = ( SPLERR_BASE + 4093 );
      CONST PMERR_SPL_ERROR                = ( SPLERR_BASE + 4095 );


      CONST NERR_BASE    =   2100;
      CONST NERR_NetNotStarted    =  (NERR_BASE+2);   (* The NETWKSTA.SYS workstation driver isn't installed. *)
      CONST NERR_RedirectedPath   =  (NERR_BASE+17);  (* The operation is invalid on a redirected resource. *)
      CONST NERR_BufTooSmall      =  (NERR_BASE+23);  (* The API return buffer is too small. *)
      CONST NERR_InvalidAPI       =  (NERR_BASE+42);  (* The requested API isn't supported on the remote server. *)
      CONST NERR_QNotFound        =  (NERR_BASE+50);  (* The printer queue does not exist. *)
      CONST NERR_JobNotFound      =  (NERR_BASE+51);  (* The print job does not exist. *)
      CONST NERR_DestNotFound     =  (NERR_BASE+52);  (* The printer destination cannot be found. *)
      CONST NERR_DestExists       =  (NERR_BASE+53);  (* The printer destination already exists. *)
      CONST NERR_QExists          =  (NERR_BASE+54);  (* The printer queue already exists. *)
      CONST NERR_QNoRoom          =  (NERR_BASE+55);  (* No more printer queues can be added. *)
      CONST NERR_JobNoRoom        =  (NERR_BASE+56);  (* No more print jobs can be added.  *)
      CONST NERR_DestNoRoom       =  (NERR_BASE+57);  (* No more printer destinations can be added. *)
      CONST NERR_DestIdle         =  (NERR_BASE+58);  (* This printer destination is idle and cannot accept control operations. *)
      CONST NERR_DestInvalidOp    =  (NERR_BASE+59);  (* This printer destination request contains an invalid control function. *)
      CONST NERR_SpoolerNotLoaded =  (NERR_BASE+61);  (* The spooler is not running. *)
      CONST NERR_DestInvalidState =  (NERR_BASE+62);  (* This operation cannot be performed on the print destination in its current state. *)
      CONST NERR_JobInvalidState  =  (NERR_BASE+64);  (* This operation cannot be performed on the print job in its current state. *)
      CONST NERR_SpoolNoMemory    =  (NERR_BASE+65);  (* A spooler memory allocation failure occurred. *)
      CONST NERR_DriverNotFound   =  (NERR_BASE+66);  (* The device driver does not exist. *)
      CONST NERR_DataTypeInvalid  =  (NERR_BASE+67);  (* The datatype is not supported by the processor. *)
      CONST NERR_ProcNotFound     =  (NERR_BASE+68);  (* The print processor is not installed. *)
      CONST NERR_BadDev           =  (NERR_BASE+241); (* The requested device is invalid. *)
      CONST NERR_CommDevInUse     =  (NERR_BASE+243); (* This device is already in use as a communications device. *)
      CONST NERR_InvalidComputer  = (NERR_BASE+251); (* This computername is invalid. *)
      CONST NERR_OpenFiles        =  (NERR_BASE+301); (* There are open files on the connection.    *)
      CONST NERR_LocalDrive       =  (NERR_BASE+305); (* The drive letter is in use locally. *)

   #endif (* error codes already included *)
#endif (* include error codes *)

(****************************************************************************
*** Picture Utilities error codes
****************************************************************************)
#if defined(INCL_PICERRORS)
   #if ! defined(INCL_PICERRORS_INCL)
      (* XLATOFF *)
      #define INCL_PICERRORS_INCL
      (* XLATON *)

      CONST PMERR_INV_TYPE        = 05001H;
      CONST PMERR_INV_CONV        = 05002H;
      CONST PMERR_INV_SEGLEN      = 05003H;
      CONST PMERR_DUP_SEGNAME     = 05004H;
      CONST PMERR_INV_XFORM       = 05005H;
      CONST PMERR_INV_VIEWLIM     = 05006H;
      CONST PMERR_INV_3DCOORD     = 05007H;
      CONST PMERR_SMB_OVFLOW      = 05008H;
      CONST PMERR_SEG_OVFLOW      = 05009H;
      CONST PMERR_PIC_DUP_FILENAME= 05010H;

   #endif (* error codes already included *)
#endif (* include error codes *)


(****************************************************************************
*    numbers from 05100  to 05fff are reserved.
****************************************************************************)

(**************************** end of file **********************************)
