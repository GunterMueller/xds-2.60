(* moddir.def  Feb 27  12:47:51  2000 *)
(* Generated by H2D v1.31.0 from moddir.h. *)
<*+ M2ADDTYPES *>
<*+ M2EXTENSIONS *>
<*+ NOHEADER *> 
<* IF NOT DEFINED(GENTYPEDEF) THEN *> <* NEW GENTYPEDEF+ *> <* END *>
<*+ CSTDLIB *>

DEFINITION MODULE ["C"] moddir;

IMPORT types, module, SYSTEM;
(* H2D:  Required IMPORT clause: 
IMPORT moddir, types, module;
*)

(*  definitions of "md_status" flag bits  *)

CONST 
  MD_MDIR = 1H;   (*  identifies node as a directory node  *)
  MD_NODIRCHG = 10000H;   (*  directory tree not modifiable  *)
  MD_NOMODCHG = 20000H;   (*  module tree not modifiable  *)
  MD_SHARED = 80000000H;   (*  shared module directory entry  *)

TYPE 
  Mod_dir = POINTER TO module_dir;

  module_dir = RECORD
    md_name   : types.Ptru_char;                        (*  module directory name 							 *)
    md_owner  : types.owner_id;                   (*  owner group/user numbers 						 *)
    md_access : types.u_int16;                    (*  access permissions to module directory 			 *)
    md_linkcnt: types.u_int16;                    (*  directory/module link count 						 *)
    md_modptr : module.Mh_com;                    (*  module pointer 									 *)
    md_modgrp : module.Mh_com;                    (*  module group pointer 							 *)
    md_static : types.u_int32;                    (*  module group memory size 						 *)
    md_modchk : types.u_int16;                    (*  module header checksum 							 *)
    md_usecnt : types.u_int16;                    (*  number of processes using module 				 *)
    md_color  : types.u_int16;                    (*  memory color of module directory entry node 		 *)
    md_rsrv1  : types.u_int16;                    (*  reserved word for alignment 						 *)
    md_size   : types.u_int32;                    (*  size of module/directory 						 *)
    md_status : types.u_int32;                    (*  status flags related to module directory 		 *)
    md_lock   : types.u_int32;                    (*  module diretory entry lock 						 *)
    md_type   : types.u_int32;                    (*  module directory type							 *)
    md_pardir : Mod_dir;                              (*  pointer to parent module directory node 			 *)
    md_parent : Mod_dir;                              (*  parent directory/module node 					 *)
    md_dirs   : Mod_dir;                              (*  head pointer to subordinate directories 			 *)
    md_mods   : Mod_dir;                              (*  head pointer to modules contained in directory 	 *)
    md_left   : Mod_dir;                              (*  module left pointer 								 *)
    md_rght   : Mod_dir;                              (*  module right pointer 							 *)
    md_next   : Mod_dir;                              (*  pointer to next module directory entry in group	 *)
    md_rsrv2  : ARRAY [0..5-1] OF types.u_int32;  (*  reserved for future use 							 *)
  END;

  mod_dir = module_dir;

(* Type 'Mod_dir' was declared here in the source file *)

(*  Module Directory - Module Entry Definition  *)

END moddir.
