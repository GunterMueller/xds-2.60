(* sysglob.def  Mar 2  10:58:25  2000 *)
(* Generated by H2D v1.31.0 from sysglob.h. *)
<*+ M2ADDTYPES *>
<*+ M2EXTENSIONS *>
<*+ NOHEADER *> 
<* IF NOT DEFINED(GENTYPEDEF) THEN *> <* NEW GENTYPEDEF+ *> <* END *>

DEFINITION MODULE ["C"] sysglob;

IMPORT types, SYSTEM;
(* H2D:  Required IMPORT clause: 
IMPORT sysglob, types;
*)


CONST 
  SR_UNKNOWN = 80000000H;   (*  unknown service request 				   *)
  SR_BLOCK = 40000000H;   (*  service request potentialy blocks 		   *)
  SR_IRQOK = 20000000H;   (*  service request ok from IRQ context 	   *)
  SR_NOCONDEMN = 10000000H;   (*  service request restricted for condemned   *)
  SR_SWITCHABLE = 8000000H;   (*  service request is system-state switchable *)
  SR_REPLACABLE = 4000000H;   (*  service request is replacable by users	   *)
  SR_NOTIFYDBG = 2000000H;   (*  notify parent when child makes call 	   *)
  SR_REMOTE = 1000000H;   (*  service request remotely servicable (MP)   *)

(*  System memory allocatory type (d_allloctype) definitions.  *)

CONST 
  MA_STD = 1;   (*  standard first-fit allocator  *)
  MA_BUDDY = 2;   (*  buddy (binary) allocator  *)

TYPE 
  glob_buff = RECORD
    CASE : INTEGER OF
       0: byt: types.u_char;   (*  8-bit value  *)
      |1: wrd: types.u_int16;  (*  16-bit value  *)
      |2: lng: types.u_int32;  (*  32-bit value  *)
    END;
  END;

  Ptrglob_buff = POINTER TO glob_buff;

PROCEDURE _os_getsys ( arg0: types.u_int32; arg1: types.u_int32;
		       arg2: Ptrglob_buff ): types.error_code;

PROCEDURE _os_setsys ( arg0: types.u_int32; arg1: types.u_int32;
		       arg2: glob_buff ): types.error_code;

PROCEDURE _os_config ( arg0: types.u_int32;
		       arg1: SYSTEM.ADDRESS ): types.error_code;

END sysglob.
