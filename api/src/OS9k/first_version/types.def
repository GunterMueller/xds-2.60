(* types.def  Feb 26  11:3:48  2000 *)
(* Generated by H2D v1.31.0 from types.h. *)
<*+ M2ADDTYPES *>
<*+ M2EXTENSIONS *>
<*+ NOHEADER *> 
<* IF NOT DEFINED(GENTYPEDEF) THEN *> <* NEW GENTYPEDEF+ *> <* END *>
<*+ CSTDLIB *>

DEFINITION MODULE ["C"] types;

IMPORT SYSTEM;
(* H2D:  Required IMPORT clause: 
IMPORT types;
*)


TYPE 
  u_char = SHORTCARD;

  u_int8 = SHORTCARD;

  u_int16 = SYSTEM.CARD16;

  u_int32 = SYSTEM.unsigned;

  u_short = SYSTEM.CARD16;

  u_long = LONGCARD;

  u_int = SYSTEM.unsigned;

  int8 = CHAR;

  int16 = SYSTEM.INT16;

  int32 = SYSTEM.int;

  error_code = SYSTEM.unsigned;

  process_id = SYSTEM.unsigned;

  path_id = SYSTEM.unsigned;

  event_id = SYSTEM.unsigned;

  signal_code = SYSTEM.unsigned;

  status_code = SYSTEM.unsigned;

  alarm_id = SYSTEM.unsigned;

  hardware_vector = SHORTCARD;

  prior_level = SYSTEM.CARD16;

  sema_val = SYSTEM.unsigned;

  owner_id = RECORD
    CASE : INTEGER OF
       0: group_user: u_int32;     (*  group/user numbers  *)
      |1: grp_usr   : RECORD
                        grp: u_int16; 
                        usr: u_int16;
                      END;
    END;
  END;
 Ptralarm_id = POINTER TO alarm_id;
 Ptru_char   = POINTER TO u_char;
 Ptru_int32  = POINTER TO u_int32;
 PtrPtrVoid  = POINTER TO SYSTEM.ADDRESS;
 PtrSChar    = POINTER TO CHAR;
 Ptrint32    = POINTER TO int32;
 Ptrsignal_code=POINTER TO signal_code;
 Ptrpath_id  = POINTER TO path_id;
 Ptru_int16  = POINTER TO u_int16;
 PtrPtrSChar = POINTER TO PtrSChar;
 PtrPtru_int16=POINTER TO Ptru_int16;
 ProcSint    = PROCEDURE(SYSTEM.int);
 ProcBYTEu32 = PROCEDURE(SEQ SYSTEM.BYTE): u_int32;
 ProcBYTEerr = PROCEDURE(SEQ SYSTEM.BYTE): error_code;
 ProcBYTE    = PROCEDURE(SEQ SYSTEM.BYTE);
END types.
