(* os9errno.def  Mar 25  12:10:24  2000 *)
(* Generated by H2D v1.31.0 from os9errno.h. *)
<*+ M2ADDTYPES *>
<*+ M2EXTENSIONS *>
<*+ NOHEADER *> 
<* IF NOT DEFINED(GENTYPEDEF) THEN *> <* NEW GENTYPEDEF+ *> <* END *>

DEFINITION MODULE ["C"] os9errno;

IMPORT SYSTEM;
(* H2D:  Required IMPORT clause: 
IMPORT os9errno;
*)

CONST 
  E_SIGABRT = 20H;   (*  abort signal							 *)
  E_SIGFPE = 21H;   (*  erroneous math operation signal		 *)
  E_SIGILL = 22H;   (*  illegal function image signal		 *)
  E_SIGSEGV = 23H;   (*  segment violation (bus error) signal  *)
  E_SIGTERM = 24H;   (*  termination request signal			 *)
  E_SIGALRM = 25H;   (*  alarm time elapsed signal			 *)
  E_SIGPIPE = 26H;   (*  write to pipe with no readers signal  *)
  E_SIGUSR1 = 27H;   (*  user signal #1						 *)
  E_SIGUSR2 = 28H;   (*  user signal #2						 *)
  E_ILLFNC = 40H;   (*  illegal function code				 *)
  E_FMTERR = 41H;   (*  format error							 *)
  E_NOTNUM = 42H;   (*  number not found/not a number		 *)
  E_ILLARG = 43H;   (*  illegal argument						 *)
  E_MEMINUSE = 50H;   (*  memory already in use  *)
  E_UNKADDR = 51H;   (*  don't know how to translate this  *)
  E_BUSERR = 66H;   (*  bus error TRAP 2 occurred			 *)
  E_ADRERR = 67H;   (*  address error TRAP 3 occurred		 *)
  E_ILLINS = 68H;   (*  illegal instruction TRAP 4 occurred	 *)
  E_ZERDIV = 69H;   (*  zero divide TRAP 5 occurred			 *)
  E_CHK = 6AH;   (*  CHK instruction TRAP 6 occurred		 *)
  E_TRAPV = 6BH;   (*  TrapV instruction TRAP 7 occurred	 *)
  E_VIOLAT = 6CH;   (*  privelage violation TRAP 8 occurred	 *)
  E_TRACE = 6DH;   (*  Uninitialized Trace TRAP 9 occurred	 *)
  E_1010 = 6EH;   (*  Uninitialized 1010 TRAP 10 occurred	 *)
  E_1111 = 6FH;   (*  Uninitialized 1111 TRAP 11 occurred	 *)
  E_RESRVD = 70H;   (*  (Motorola reserved)					 *)
  E_CPROTO = 71H;   (*  Coprocessor protocol error			 *)
  E_STKFMT = 72H;   (*  Stack frame format error				 *)
  E_UNIRQ = 73H;   (*  Uninitialized interrupt				 *)
  E_TRAP = 85H;   (*  user traps 1-15 E_TRAP+n				 *)
  E_FPUNORDC = 94H;   (*  FP unordered condition error			 *)
  E_FPINXACT = 95H;   (*  FP inexact result					 *)
  E_FPDIVZER = 96H;   (*  FP zero divisor						 *)
  E_FPUNDRFL = 97H;   (*  FP underflow							 *)
  E_FPOPRERR = 98H;   (*  FP operand error						 *)
  E_FPOVERFL = 99H;   (*  FP overflow							 *)
  E_FPNOTNUM = 9AH;   (*  FP not a number						 *)
  E_FPUNDATA = 9BH;   (*  FP Unsupported data type				 *)
  E_MMUCONF = 9CH;   (*  MMU configuration error				 *)
  E_MMUILLEG = 9DH;   (*  MMU illegal operation				 *)
  E_MMUACCES = 9EH;   (*  MMU access level violation			 *)
  E_PERMIT = 0A4H;   (*  You must be super user to do that	 *)
  E_DIFFER = 0A5H;   (*  Arguments to F$ChkNam are different	 *)
  E_STKOVF = 0A6H;   (*  Stack overflow (ChkNam)				 *)
  E_EVNTID = 0A7H;   (*  Invalid or Illegal event ID number	 *)
  E_EVNF = 0A8H;   (*  Event (name) not found				 *)
  E_EVBUSY = 0A9H;   (*  The event is busy (can't be deleted)	 *)
  E_EVPARM = 0AAH;   (*  Impossible Event parameters supplied	 *)
  E_DAMAGE = 0ABH;   (*  System data structures are damaged	 *)
  E_BADREV = 0ACH;   (*  Incompatible revision				 *)
  E_PTHLOST = 0ADH;   (*  Path Lost (net node was down)		 *)
  E_BADPART = 0AEH;   (*  Bad partition data or no active		 *)

CONST 
  E_HARDWARE = 0AFH;   (*  Hardware is damaged					 *)
  E_NOTME = 0B0H;   (*  not responsible for servicing exception  *)
  E_BSIG = 0B1H;   (*  process recieved signal fatal signal or no intercept  *)
  E_BUF2SMALL = 0B2H;   (*  buffer is too small					 *)
  E_ISUB = 0B3H;   (*  illegal/used subroutine module number *)
  E_EVTFUL = 0B4H;   (*  event descriptor table full			 *)
  E_SYMLINK = 0C4H;   (*  symbolic link found in path list		 *)
  E_EOLIST = 0C5H;   (*  end of alias list					 *)
  E_LOCKID = 0C6H;   (*  illegal I/O lock identifier			 *)
  E_NOLOCK = 0C7H;   (*  lock not obtained					 *)
  E_PTHFUL = 0C8H;   (*  Path Table full						 *)
  E_BPNUM = 0C9H;   (*  Bad Path Number						 *)
  E_POLL = 0CAH;   (*  Polling Table Full					 *)
  E_BMODE = 0CBH;   (*  Bad Mode								 *)
  E_DEVOVF = 0CCH;   (*  Device Table Overflow				 *)
  E_BMID = 0CDH;   (*  Bad Module ID						 *)
  E_DIRFUL = 0CEH;   (*  Module Directory Full				 *)
  E_MEMFUL = 0CFH;   (*  Process Memory Full					 *)
  E_UNKSVC = 0D0H;   (*  Unknown Service Code					 *)
  E_MODBSY = 0D1H;   (*  Module Busy							 *)
  E_BPADDR = 0D2H;   (*  Bad Page Address						 *)
  E_EOF = 0D3H;   (*  End of File							 *)
  E_VCTBSY = 0D4H;   (*  IRQ Vector is already used			 *)
  E_NES = 0D5H;   (*  Non-Existing Segment					 *)
  E_FNA = 0D6H;   (*  File Not Accesible					 *)
  E_BPNAM = 0D7H;   (*  Bad Path Name						 *)
  E_PNNF = 0D8H;   (*  Path Name Not Found					 *)
  E_SLF = 0D9H;   (*  Segment List Full					 *)
  E_CEF = 0DAH;   (*  Creating Existing File				 *)
  E_IBA = 0DBH;   (*  Illegal Block Address				 *)
  E_HANGUP = 0DCH;   (*  Phone hangup occurred (modem)		 *)
  E_MNF = 0DDH;   (*  Module Not Found						 *)
  E_NOCLK = 0DEH;   (*  System has no clock running			 *)
  E_DELSP = 0DFH;   (*  Deleting Stack Pointer memory		 *)
  E_IPRCID = 0E0H;   (*  Illegal Process ID					 *)
  E_PARAM = 0E1H;   (*  Impossible polling parameter specified *)
  E_NOCHLD = 0E2H;   (*  No Children							 *)
  E_ITRAP = 0E3H;   (*  Invalid or unavailable Trap code		 *)
  E_PRCABT = 0E4H;   (*  Process Aborted						 *)
  E_PRCFUL = 0E5H;   (*  Process Table Full					 *)
  E_IFORKP = 0E6H;   (*  Illegal Fork Parameter				 *)
  E_KWNMOD = 0E7H;   (*  Known Module							 *)
  E_BMCRC = 0E8H;   (*  Bad Module CRC						 *)
  E_SIGNAL = 0E9H;   (*  Signal Error (replaces E_USIGP)		 *)
  E_NEMOD = 0EAH;   (*  Non Existing Module					 *)
  E_BNAM = 0EBH;   (*  Bad Name								 *)
  E_BMHP = 0ECH;   (*  bad module header parity				 *)
  E_NORAM = 0EDH;   (*  No Ram Available						 *)
  E_DNE = 0EEH;   (*  Directory not empty					 *)
  E_NOTASK = 0EFH;   (*  No available Task number				 *)
  E_UNIT = 0F0H;   (*  Illegal Unit (drive)					 *)
  E_SECT = 0F1H;   (*  Bad SECTor number					 *)
  E_WP = 0F2H;   (*  Write Protect						 *)
  E_CRC = 0F3H;   (*  Bad Check Sum						 *)
  E_READ = 0F4H;   (*  Read Error							 *)
  E_WRITE = 0F5H;   (*  Write Error							 *)
  E_NOTRDY = 0F6H;   (*  Device Not Ready						 *)
  E_SEEK = 0F7H;   (*  Seek Error							 *)
  E_FULL = 0F8H;   (*  Media Full							 *)
  E_BTYP = 0F9H;   (*  Bad Type (incompatible) media		 *)
  E_DEVBSY = 0FAH;   (*  Device Busy							 *)
  E_DIDC = 0FBH;   (*  Disk ID Change						 *)
  E_LOCK = 0FCH;   (*  Record is busy (locked out)			 *)
  E_SHARE = 0FDH;   (*  Non-sharable file busy				 *)
  E_DEADLK = 0FEH;   (*  I/O Deadlock error					 *)
  E_FORMAT = 0FFH;   (*  Device is format protected			 *)

CONST 
  EOS_SIGABRT = 20H;   (*  abort signal							 *)
  EOS_SIGFPE = 21H;   (*  erroneous math operation signal		 *)
  EOS_SIGILL = 22H;   (*  illegal function image signal		 *)
  EOS_SIGSEGV = 23H;   (*  segment violation (bus error) signal  *)
  EOS_SIGTERM = 24H;   (*  termination request signal			 *)
  EOS_SIGALRM = 25H;   (*  alarm time elapsed signal			 *)
  EOS_SIGPIPE = 26H;   (*  write to pipe with no readers signal  *)
  EOS_SIGUSR1 = 27H;   (*  user signal #1						 *)
  EOS_SIGUSR2 = 28H;   (*  user signal #2						 *)
  EOS_ILLFNC = 40H;   (*  illegal function code				 *)
  EOS_FMTERR = 41H;   (*  format error							 *)
  EOS_NOTNUM = 42H;   (*  number not found/not a number		 *)
  EOS_ILLARG = 43H;   (*  illegal argument						 *)
  EOS_MEMINUSE = 50H;   (*  memory already in use  *)
  EOS_UNKADDR = 51H;   (*  don't know how to translate this  *)
  EOS_BUSERR = 66H;   (*  bus error TRAP 2 occurred			 *)
  EOS_ADRERR = 67H;   (*  address error TRAP 3 occurred		 *)
  EOS_ILLINS = 68H;   (*  illegal instruction TRAP 4 occurred	 *)
  EOS_ZERDIV = 69H;   (*  zero divide TRAP 5 occurred			 *)
  EOS_CHK = 6AH;   (*  CHK instruction TRAP 6 occurred		 *)
  EOS_TRAPV = 6BH;   (*  TrapV instruction TRAP 7 occurred	 *)
  EOS_VIOLAT = 6CH;   (*  privelage violation TRAP 8 occurred	 *)
  EOS_TRACE = 6DH;   (*  Uninitialized Trace TRAP 9 occurred	 *)
  EOS_1010 = 6EH;   (*  Uninitialized 1010 TRAP 10 occurred	 *)
  EOS_1111 = 6FH;   (*  Uninitialized 1111 TRAP 11 occurred	 *)
  EOS_RESRVD = 70H;   (*  (Motorola reserved)					 *)
  EOS_CPROTO = 71H;   (*  Coprocessor protocol error			 *)
  EOS_STKFMT = 72H;   (*  Stack frame format error				 *)
  EOS_UNIRQ = 73H;   (*  Uninitialized interrupt				 *)
  EOS_TRAP = 85H;   (*  user traps 1-15 EOS_TRAP+n				 *)
  EOS_FPUNORDC = 94H;   (*  FP unordered condition error			 *)
  EOS_FPINXACT = 95H;   (*  FP inexact result					 *)
  EOS_FPDIVZER = 96H;   (*  FP zero divisor						 *)
  EOS_FPUNDRFL = 97H;   (*  FP underflow							 *)
  EOS_FPOPRERR = 98H;   (*  FP operand error						 *)
  EOS_FPOVERFL = 99H;   (*  FP overflow							 *)
  EOS_FPNOTNUM = 9AH;   (*  FP not a number						 *)
  EOS_FPUNDATA = 9BH;   (*  FP Unsupported data type				 *)
  EOS_MMUCONF = 9CH;   (*  MMU configuration error				 *)
  EOS_MMUILLEG = 9DH;   (*  MMU illegal operation				 *)
  EOS_MMUACCES = 9EH;   (*  MMU access level violation			 *)
  EOS_UEA = 0A0H;   (*  unimplemented effective address (68060)  *)
  EOS_UII = 0A1H;   (*  unimplemented integer instruction (68060)  *)
  EOS_PERMIT = 0A4H;   (*  You must be super user to do that	 *)
  EOS_DIFFER = 0A5H;   (*  Arguments to F$ChkNam are different	 *)
  EOS_STKOVF = 0A6H;   (*  Stack overflow (ChkNam)				 *)
  EOS_EVNTID = 0A7H;   (*  Invalid or Illegal event ID number	 *)
  EOS_EVNF = 0A8H;   (*  Event (name) not found				 *)
  EOS_EVBUSY = 0A9H;   (*  The event is busy (can't be deleted)	 *)
  EOS_EVPARM = 0AAH;   (*  Impossible Event parameters supplied	 *)
  EOS_DAMAGE = 0ABH;   (*  System data structures are damaged	 *)
  EOS_BADREV = 0ACH;   (*  Incompatible revision				 *)
  EOS_PTHLOST = 0ADH;   (*  Path Lost (net node was down)		 *)
  EOS_BADPART = 0AEH;   (*  Bad partition data or no active		 *)

CONST 
  EOS_HARDWARE = 0AFH;   (*  Hardware is damaged					 *)
  EOS_NOTME = 0B0H;   (*  not responsible for servicing exception  *)
  EOS_BSIG = 0B1H;   (*  process recieved signal fatal signal or no intercept  *)
  EOS_BUF2SMALL = 0B2H;   (*  buffer is too small					 *)
  EOS_ISUB = 0B3H;   (*  illegal/used subroutine module number *)
  EOS_EVTFUL = 0B4H;   (*  event descriptor table full			 *)
  EOS_SYMLINK = 0C4H;   (*  symbolic link found in path list 	 *)
  EOS_EOLIST = 0C5H;   (*  end of alias list					 *)
  EOS_LOCKID = 0C6H;   (*  illegal I/O lock identifier			 *)
  EOS_NOLOCK = 0C7H;   (*  lock not obtained					 *)
  EOS_PTHFUL = 0C8H;   (*  Path Table full						 *)
  EOS_BPNUM = 0C9H;   (*  Bad Path Number						 *)
  EOS_POLL = 0CAH;   (*  Polling Table Full					 *)
  EOS_BMODE = 0CBH;   (*  Bad Mode								 *)
  EOS_DEVOVF = 0CCH;   (*  Device Table Overflow				 *)
  EOS_BMID = 0CDH;   (*  Bad Module ID						 *)
  EOS_DIRFUL = 0CEH;   (*  Module Directory Full				 *)
  EOS_MEMFUL = 0CFH;   (*  Process Memory Full					 *)
  EOS_UNKSVC = 0D0H;   (*  Unknown Service Code					 *)
  EOS_MODBSY = 0D1H;   (*  Module Busy							 *)
  EOS_BPADDR = 0D2H;   (*  Bad Page Address						 *)
  EOS_EOF = 0D3H;   (*  End of File							 *)
  EOS_VCTBSY = 0D4H;   (*  IRQ Vector is already used			 *)
  EOS_NES = 0D5H;   (*  Non-Existing Segment					 *)
  EOS_FNA = 0D6H;   (*  File Not Accesible					 *)
  EOS_BPNAM = 0D7H;   (*  Bad Path Name						 *)
  EOS_PNNF = 0D8H;   (*  Path Name Not Found					 *)
  EOS_SLF = 0D9H;   (*  Segment List Full					 *)
  EOS_CEF = 0DAH;   (*  Creating Existing File				 *)
  EOS_IBA = 0DBH;   (*  Illegal Block Address				 *)
  EOS_HANGUP = 0DCH;   (*  Phone hangup occurred (modem)		 *)
  EOS_MNF = 0DDH;   (*  Module Not Found						 *)
  EOS_NOCLK = 0DEH;   (*  System has no clock running			 *)
  EOS_DELSP = 0DFH;   (*  Deleting Stack Pointer memory		 *)
  EOS_IPRCID = 0E0H;   (*  Illegal Process ID					 *)
  EOS_PARAM = 0E1H;   (*  Impossible polling parameter specified *)
  EOS_NOCHLD = 0E2H;   (*  No Children							 *)
  EOS_ITRAP = 0E3H;   (*  Invalid or unavailable Trap code		 *)
  EOS_PRCABT = 0E4H;   (*  Process Aborted						 *)
  EOS_PRCFUL = 0E5H;   (*  Process Table Full					 *)
  EOS_IFORKP = 0E6H;   (*  Illegal Fork Parameter				 *)
  EOS_KWNMOD = 0E7H;   (*  Known Module							 *)
  EOS_BMCRC = 0E8H;   (*  Bad Module CRC						 *)
  EOS_SIGNAL = 0E9H;   (*  Signal Error (replaces EOS_USIGP)	 *)
  EOS_NEMOD = 0EAH;   (*  Non Existing Module					 *)
  EOS_BNAM = 0EBH;   (*  Bad Name								 *)
  EOS_BMHP = 0ECH;   (*  bad module header parity				 *)
  EOS_NORAM = 0EDH;   (*  No Ram Available						 *)
  EOS_DNE = 0EEH;   (*  Directory not empty					 *)
  EOS_NOTASK = 0EFH;   (*  No available Task number				 *)
  EOS_UNIT = 0F0H;   (*  Illegal Unit (drive)					 *)
  EOS_SECT = 0F1H;   (*  Bad SECTor number					 *)
  EOS_WP = 0F2H;   (*  Write Protect						 *)
  EOS_CRC = 0F3H;   (*  Bad Check Sum						 *)
  EOS_READ = 0F4H;   (*  Read Error							 *)
  EOS_WRITE = 0F5H;   (*  Write Error							 *)
  EOS_NOTRDY = 0F6H;   (*  Device Not Ready						 *)
  EOS_SEEK = 0F7H;   (*  Seek Error							 *)
  EOS_FULL = 0F8H;   (*  Media Full							 *)
  EOS_BTYP = 0F9H;   (*  Bad Type (incompatible) media		 *)
  EOS_DEVBSY = 0FAH;   (*  Device Busy							 *)
  EOS_DIDC = 0FBH;   (*  Disk ID Change						 *)
  EOS_LOCK = 0FCH;   (*  Record is busy (locked out)			 *)
  EOS_SHARE = 0FDH;   (*  Non-sharable file busy				 *)
  EOS_DEADLK = 0FEH;   (*  I/O Deadlock error					 *)
  EOS_FORMAT = 0FFH;   (*  Device is format protected			 *)
  ERANGE = 10000H;   (*  ANSI C number out of range error		 *)
  EDOM = 10001H;   (*  ANSI C number not in domain			 *)
CONST 
  EOS_GFM_BASE = 60000H;   (*  GFM error code base  *)
  EOS_ILLPRM = EOS_GFM_BASE+0;   (*  illegal parameter  *)
  EOS_IDFULL = EOS_GFM_BASE+1;   (*  identifier table full  *)
  EOS_BADSIZ = EOS_GFM_BASE+2;   (*  bad size error  *)
  EOS_RGFULL = EOS_GFM_BASE+3;   (*  region definition full  *)
  EOS_UNID = EOS_GFM_BASE+4;   (*  unallocated identifier number  *)
  EOS_NULLRG = EOS_GFM_BASE+5;   (*  null region  *)
  EOS_BADMOD = EOS_GFM_BASE+6;   (*  bad drawmap / pattern mode  *)
  EOS_NOFONT = EOS_GFM_BASE+7;   (*  no active font  *)
  EOS_NODM = EOS_GFM_BASE+8;   (*  no drawmap  *)
  EOS_NOPLAY = EOS_GFM_BASE+9;   (*  no play/record is in progress  *)
  EOS_ABORT = EOS_GFM_BASE+10;   (*  marks a play/record as aborted  *)
  EOS_QFULL = EOS_GFM_BASE+11;   (*  audio queue is full  *)
  EOS_BUSY = EOS_GFM_BASE+12;   (*  audio device is busy  *)
  EOS_GSL_BASE = 60064H;   (*  GSL error code base  *)
  EOS_RES_BASE = EOS_GSL_BASE+0;   (*  errors for resource manager  *)
  EOS_RES_NOSLOT = EOS_RES_BASE+0;   (*  No free slot in the table	 *)
  EOS_RES_BADSLOT = EOS_RES_BASE+1;   (*  The slot is bad 				 *)
  EOS_RES_NOSHARE = EOS_RES_BASE+2;   (*  The resource is not sharable  *)
  EOS_RES_NOTYPE = EOS_RES_BASE+3;   (*  The type is bad 				 *)
  EOS_RES_NORES = EOS_RES_BASE+4;   (*  The ID of the resource is bad  *)
  EOS_REQ_BASE = EOS_GSL_BASE+10;   (*  errors for request manager  *)
  EOS_REQ_NOITEMS = EOS_REQ_BASE+0;   (*  request has no items  *)
  EOS_REQ_BADITEM = EOS_REQ_BASE+1;   (*  item number out of range  *)
  EOS_REQ_BADCOLS = EOS_REQ_BASE+2;   (*  request has bad num. columns  *)
  EOS_REQ_BADPTR = EOS_REQ_BASE+3;   (*  bad pointer for item array  *)
  EOS_REQ_NOCREATE = EOS_REQ_BASE+4;   (*  request hasn't been created  *)
  EOS_REQ_TIMEOUT = EOS_REQ_BASE+5;   (*  request has timed out  *)
  EOS_REQ_NOSEL = EOS_REQ_BASE+6;   (*  no selection has been made  *)
  EOS_REQ_DEFID = EOS_REQ_BASE+7;   (*  bad definition id  *)
  EOS_REQ_DEFACT = EOS_REQ_BASE+8;   (*  bad definition action code  *)
  EOS_REQ_STATE = EOS_REQ_BASE+9;   (*  illegal item state  *)
  EOS_REQ_BADRECT = EOS_REQ_BASE+10;   (*  illegal request rectangle  *)
  EOS_CNT_BASE = EOS_GSL_BASE+30;   (*  errors for control manager  *)
  EOS_CNT_BHVID = EOS_CNT_BASE+0;   (*  bad standard behavior id  *)
  EOS_CNT_DEFID = EOS_CNT_BASE+1;   (*  bad standard definition id  *)
  EOS_CNT_DEFACT = EOS_CNT_BASE+2;   (*  bad action for definition function  *)
  EOS_CNT_BHVACT = EOS_CNT_BASE+3;   (*  bad action for behavior function  *)
  EOS_CNT_STATE = EOS_CNT_BASE+4;   (*  bad control state  *)
  EOS_CNT_PART = EOS_CNT_BASE+5;   (*  bad control part code  *)
  EOS_CNT_FLAGS = EOS_CNT_BASE+6;   (*  bad flags  *)
  EOS_CNT_MINMAX = EOS_CNT_BASE+7;   (*  bad min, bad max or value out of range  *)
  EOS_CNT_TYPE = EOS_CNT_BASE+8;   (*  bad type of control  *)
  EOS_CLIP_BASE = EOS_GSL_BASE+40;   (*  errors for clipboard manager  *)
  EOS_CLIP_DEV = EOS_CLIP_BASE+0;   (*  can't find clipboard default device from preferences  *)
  EOS_CLIP_FULL = EOS_CLIP_BASE+1;   (*  clipboard is full (attempt to write too many different types in clipboard)  *)
  EOS_CLIP_TYPE = EOS_CLIP_BASE+2;   (*  type not currently represented in clipboard  *)
  EOS_CLIP_ACC = EOS_CLIP_BASE+3;   (*  clipboard not opened for the requested access  *)
  EOS_CLIP_CNT = EOS_CLIP_BASE+4;   (*  type offset greater than type count  *)
  EOS_CLIP_OPEN = EOS_CLIP_BASE+5;   (*  clipboard not currently opened  *)
  EOS_CLIP_INIT = EOS_CLIP_BASE+6;   (*  clipboard not initialized  *)
  EOS_CLIP_CLOSE = EOS_CLIP_BASE+7;   (*  clipboard is not currently closed  *)
  EOS_CLIP_RW = EOS_CLIP_BASE+8;   (*  can't rewrite - type not represented in clipboard  *)
  EOS_HNDLR_BASE = EOS_GSL_BASE+50;   (*  errors for dispatch manager  *)
  EOS_HNDLR_UNKNOWN = EOS_HNDLR_BASE+0;
  EOS_ATBL_BASE = EOS_GSL_BASE+55;   (*  errors for association table routines  *)
  EOS_ATBL_NOENTRY = EOS_ATBL_BASE+0;   (*  no entry found  *)
  EOS_BOX_BASE = EOS_GSL_BASE+60;   (*  errors for ed_box function   *)
  EOS_BOX_TABLE = EOS_BOX_BASE+0;   (*  line table overflow  *)
  EOS_BOX_COUNT = EOS_BOX_BASE+1;   (*  text too long (max = 65535 characters)  *)
  EOS_BOX_TYPE = EOS_BOX_BASE+2;   (*  bad type or type not implemented  *)
  EOS_BOX_MAXL = EOS_BOX_BASE+3;   (*  attempt to draw too long line (max is 1024 chars)  *)
  EOS_BOX_NOTAB = EOS_BOX_BASE+4;   (*  need a line table (if the BOX_F_USETAB flag is set in the "type" parameter)  *)
  EOS_BOX_NOFONT = EOS_BOX_BASE+5;   (*  font not set in the drawmap  *)
  EOS_BOX_RECT = EOS_BOX_BASE+6;   (*  bad rectangle  *)
  EOS_INIT_BASE = EOS_GSL_BASE+80;   (*  errors for init function  *)
  EOS_INIT_VARERR = EOS_INIT_BASE+0;
  EOS_INTER_BASE = EOS_GSL_BASE+85;
  EOS_INTER_NOMOD = EOS_INTER_BASE+0;   (*  no preference module  *)
  EOS_INTER_ILLARG = EOS_INTER_BASE+1;   (*  illegal arguement  *)
  EOS_OVL_BASE = EOS_GSL_BASE+90;   (*  overlay window errors  *)
  EOS_OVL_BADRECT = EOS_OVL_BASE+0;   (*  bad rectangle for overlay  *)
  EOS_OVL_NOTTOP = EOS_OVL_BASE+1;   (*  not top of overlay stack  *)
  EOS_OVL_UNKNOWN = EOS_OVL_BASE+2;   (*  unknown overlay  *)
  EOS_IND_BASE = EOS_GSL_BASE+100;   (*  indicator manager errors  *)
  EOS_IND_DEFID = EOS_IND_BASE+0;   (*  bad definition id  *)
  EOS_IND_DEFACT = EOS_IND_BASE+1;   (*  bad action for def. function  *)
  EOS_IND_MINMAX = EOS_IND_BASE+2;   (*  bad min, max or value out of range  *)
  EOS_IND_BADCORDS = EOS_IND_BASE+3;   (*  bad coordinates for indicator  *)
  EOS_IND_NOCREATE = EOS_IND_BASE+4;   (*  attempt op. on non-created ind.  *)
  EOS_IND_BADFLAGS = EOS_IND_BASE+5;   (*  bad flag combination  *)
  EOS_IND_BADPTR = EOS_IND_BASE+6;   (*  bad pointer in structure  *)
  EOS_IND_BADDISP = EOS_IND_BASE+7;   (*  bad displacement  *)

CONST 
  EOS_IFF_BASE = 458752;   (*  base error code for IFF  *)
  EOS_IFF_RONLY = EOS_IFF_BASE+1;   (*  this path is read-only  *)
  EOS_IFF_WONLY = EOS_IFF_BASE+2;   (*  this path is write-only  *)
  EOS_IFF_ACTFORM = EOS_IFF_BASE+3;   (*  there is no FORM active  *)
  EOS_IFF_READER = EOS_IFF_BASE+4;   (*  wrong reader for this type of FORM  *)
  EOS_IFF_NOTIFF = EOS_IFF_BASE+5;   (*  not an IFF file  *)
  EOS_IFF_BADPARM = EOS_IFF_BASE+6;   (*  bad parameters  *)
  EOS_IFF_BADCAT = EOS_IFF_BASE+7;   (*  bad CAT id (for iff_open)  *)
  EOS_IFF_SIZEOS_UNKNOWN = EOS_IFF_BASE+8;   (*  cannot skip, size is unknown  *)
  EOS_IFF_NOT_DATA = EOS_IFF_BASE+9;   (*  not to the data yet  *)
  EOS_IFF_PIPEOS_SEEK = EOS_IFF_BASE+10;   (*  attempt to seek back in a pipe  *)
  EOS_IFF_BADCHUNKSIZE = EOS_IFF_BASE+11;   (*                                                   fixed size chunk was not the   *)
                                            (* 												correct size.  Could indicate                                        *)
                                            (* 												wrong version of reader                                              *)
  EOS_IFF_FPNOTNUM = EOS_IFF_BASE+12;   (*  can't make float conversion  *)


CONST 
  EOS_ENETBASE = 70000H;
  EWOULDBLOCK = EOS_ENETBASE+1H;   (*  I/O operation would block  *)
  EINPROGRESS = EOS_ENETBASE+2H;   (*  I/O operation now in progress  *)
  EALREADY = EOS_ENETBASE+3H;   (*  operation already in progress  *)
  EDESTADDRREQ = EOS_ENETBASE+4H;   (*  destination address required  *)
  EMSGSIZE = EOS_ENETBASE+5H;   (*  message too long  *)
  EPROTOTYPE = EOS_ENETBASE+6H;   (*  protocol wrong type for socket  *)
  ENOPROTOOPT = EOS_ENETBASE+7H;   (*  bad protocol option  *)
  EPROTONOSUPPORT = EOS_ENETBASE+8H;   (*  protocol not supported  *)
  ESOCKNOSUPPORT = EOS_ENETBASE+9H;   (*  socket type not supported  *)
  EOPNOTSUPP = EOS_ENETBASE+0AH;   (*  operation not supported on socket  *)
  EPFNOSUPPORT = EOS_ENETBASE+0BH;   (*  protocol family not supported  *)
  EAFNOSUPPORT = EOS_ENETBASE+0CH;   (*  address family not supported by protocol  *)
  EADDRINUSE = EOS_ENETBASE+0DH;   (*  address already in use  *)
  EADDRNOTAVAIL = EOS_ENETBASE+0EH;   (*  can't assign requested address  *)
  ENETDOWN = EOS_ENETBASE+0FH;   (*  network is down  *)
  ENETUNREACH = EOS_ENETBASE+10H;   (*  network is unreachable  *)
  ENETRESET = EOS_ENETBASE+11H;   (*  network dropped connection on reset  *)
  ECONNABORTED = EOS_ENETBASE+12H;   (*  software caused connection abort  *)
  ECONNRESET = EOS_ENETBASE+13H;   (*  connection reset by peer  *)
  ENOBUFS = EOS_ENETBASE+14H;   (*  no buffer space available  *)
  EISCONN = EOS_ENETBASE+15H;   (*  socket is already connected  *)
  ENOTCONN = EOS_ENETBASE+16H;   (*  socket is not connected  *)
  ESHUTDOWN = EOS_ENETBASE+17H;   (*  can't send after socket shutdown  *)
  ETOOMANYREFS = EOS_ENETBASE+18H;   (*  too many references  *)
  ETIMEDOUT = EOS_ENETBASE+19H;   (*  connection timed out  *)
  ECONNREFUSED = EOS_ENETBASE+1AH;   (*  connection refused by target  *)
  EBUFTOOSMALL = EOS_ENETBASE+1BH;   (*  mbuf too small for mbuf operation	 *)
  ESMODEXISTS = EOS_ENETBASE+1CH;   (*  socket module already attached		 *)
  ENOTSOCK = EOS_ENETBASE+1DH;   (*  path is not a socket					 *)
  EHOSTUNREACH = EOS_ENETBASE+1EH;   (*  No route to host  *)
  EHOSTDOWN = EOS_ENETBASE+1FH;   (*  host is down  *)


CONST 
  EOS_WANBASE = 80000H;   (*  WAN error code base			 *)
  EOS_LNKDWN = EOS_WANBASE+1;   (*  Layer 1 link down [Driver]	 *)
  EOS_CONN = EOS_WANBASE+2;   (*  Connection error [Driver]	 *)
  EOS_RXTHREAD = EOS_WANBASE+3;   (*  Error in receive thread		 *)
  EOS_ME = EOS_WANBASE+4;   (*  Management entity error		 *)
  EOS_SAPI = EOS_WANBASE+5;   (*  Unrecognized SAPI			 *)
  EOS_TEI = EOS_WANBASE+6;   (*  TEI not found				 *)
  EOS_MAX_TEI = EOS_WANBASE+7;   (*  Maximum # of TEI				 *)
  EOS_TSTATE = EOS_WANBASE+8;   (*  Illegal TEI state			 *)
  EOS_TEI_DENIED = EOS_WANBASE+9;   (*  TEI request denied by network *)
  EOS_PRIMITIVE = EOS_WANBASE+10;   (*  Unrecognized primitive		 *)
  EOS_L2IN = EOS_WANBASE+11;   (*  Layer 2 error				 *)
  EOS_PEER_BUSY = EOS_WANBASE+12;   (*  Peer receiver busy condition	 *)
  EOS_K = EOS_WANBASE+13;   (*  Max # outstanding I frames	 *)
  EOS_MAXCREF = EOS_WANBASE+14;   (*  Max # of call references		 *)
  EOS_CREF = EOS_WANBASE+15;   (*  Call reference doesn't exist	 *)
  EOS_CALLPROG = EOS_WANBASE+16;   (*  Error on call progress state	 *)
  EOS_RCVR = EOS_WANBASE+17;   (*  Receiver previously assigned	 *)
  EOS_REQDENIED = EOS_WANBASE+18;   (*  Request denied by far end     *)


CONST 
  EOS_MAUI_BASE = 0A0000H;
  PPC_BASE = 6553600;
  EOS_PPC_MACHCHK = PPC_BASE+2;   (*  Machine check					  *)
  EOS_PPC_DATAACC = PPC_BASE+3;   (*  Data access						  *)
  EOS_PPC_INSTACC = PPC_BASE+4;   (*  Instruction access				  *)
  EOS_PPC_EXTINT = PPC_BASE+5;   (*  External interrupt				  *)
  EOS_PPC_ALIGN = PPC_BASE+6;   (*  Alignment						  *)
  EOS_PPC_PROGRAM = PPC_BASE+7;   (*  Program							  *)
  EOS_PPC_FPUUNAV = PPC_BASE+8;   (*  FPU unavailable					  *)
  EOS_PPC_DEC = PPC_BASE+9;   (*  Decrementer						  *)
  EOS_PPC_IOCONT = PPC_BASE+10;   (*  I/O controller					  *)
  EOS_PPC_SYSCALL = PPC_BASE+12;   (*  System call						  *)
  EOS_PPC_TRACE = PPC_BASE+32;   (*  Trace							  *)


CONST 
  CMX_BASE = 6619136;
  EOS_CMX_ITLB = CMX_BASE+0;   (*  Instruction TLB					  *)
  EOS_CMX_DTLB = CMX_BASE+1;   (*  Data TLB 						  *)
  EOS_CMX_OPCODE = CMX_BASE+2;   (*  Unimplemented opcode 			  *)
  EOS_CMX_PROTECT = CMX_BASE+3;   (*  Protected instruction violation	  *)
  EOS_CMX_READ = CMX_BASE+4;   (*  No read permission				  *)
  EOS_CMX_WRITE = CMX_BASE+5;   (*  No write permission				  *)
  EOS_CMX_EXECUTE = CMX_BASE+6;   (*  No execute permission			  *)
  EOS_CMX_UNALIGN = CMX_BASE+7;   (*  Unaligned operation				  *)
  EOS_CMX_OVERFLOW = CMX_BASE+8;   (*  Integer overflow 				  *)
  EOS_CMX_DIVZERO = CMX_BASE+9;   (*  Integer divide by zero			  *)
  EOS_CMX_SOFT = CMX_BASE+10;   (*  Software trap (trap instruction)   *)
  EOS_CMX_MALADDR = CMX_BASE+11;   (*  Bad effective address			  *)
  EOS_CMX_DEBUG = CMX_BASE+16;   (*  Single step or debug instruction   *)
  EOS_CMX_IWATCH = CMX_BASE+17;   (*  Instruction watchpoint			  *)
  EOS_CMX_DWATCH = CMX_BASE+18;   (*  Data watchpoint					  *)
  EOS_CMX_FPINV = CMX_BASE+24;   (*  Floating-point invalid operation   *)
  EOS_CMX_FPDIVZ = CMX_BASE+25;   (*  Floating-point divide by zero	  *)
  EOS_CMX_FPOFLOW = CMX_BASE+26;   (*  Floating-point overflow			  *)
  EOS_CMX_FPUFLOW = CMX_BASE+27;   (*  Floating-point underflow 		  *)
  EOS_CMX_FPINEXCT = CMX_BASE+28;   (*  Floating-point inexact			  *)
  EOS_CMX_FPIEEE = CMX_BASE+29;   (*  Floating-point IEEE software support  *)

CONST 
  MIPS_BASE = 6684672;
  EOS_MIPS_EXTINT = MIPS_BASE+0;   (*  External Interrupt 				 *)
  EOS_MIPS_MOD = MIPS_BASE+1;   (*  TLB Modification Exception 		 *)
  EOS_MIPS_TLBL = MIPS_BASE+2;   (*  TLB Miss Exception (load or instruction fetch)  *)
  EOS_MIPS_TLBS = MIPS_BASE+3;   (*  TLB Miss Exception (store) 		 *)
  EOS_MIPS_ADEL = MIPS_BASE+4;   (*  Address Error Exception (load or instruction fetch)  *)
  EOS_MIPS_ADES = MIPS_BASE+5;   (*  Address Error Exception (store) 	 *)
  EOS_MIPS_IBE = MIPS_BASE+6;   (*  Bus Error Exception (instruction fetch)  *)
  EOS_MIPS_DBE = MIPS_BASE+7;   (*  Bus Error Exception (load or store)  *)
  EOS_MIPS_SYS = MIPS_BASE+8;   (*  SYSCALL Exception 				 *)
  EOS_MIPS_BP = MIPS_BASE+9;   (*  Breakpoint Exception 			 *)
  EOS_MIPS_RI = MIPS_BASE+10;   (*  Reserved Instruction Exception 	 *)
  EOS_MIPS_CPU = MIPS_BASE+11;   (*  CoProcessor Unusable Exception 	 *)
  EOS_MIPS_OVF = MIPS_BASE+12;   (*  Arithmetic Overflow Exception 	 *)
  EOS_MIPS_TR = MIPS_BASE+13;   (*  Trap Exception 					 *)
  EOS_MIPS_WATCH = MIPS_BASE+23;   (*  Watch Exception 					 *)
  EOS_MIPS_UTLB = MIPS_BASE+32;   (*  User State TLB Miss Exception 	 *)

CONST 
  ARM_BASE = 6750208;
  EOS_ARM_UNDEF = ARM_BASE+1;   (*  Undefined Instruction Exception	 *)
  EOS_ARM_PFABORT = ARM_BASE+3;   (*  Instruction pre-fetch abort exception	 *)
  EOS_ARM_DTABORT = ARM_BASE+4;   (*  Data abort Exception				 *)
  EOS_ARM_ALIGN = ARM_BASE+8;   (*  Alignment Exception				 *)


CONST 
  SH_BASE = 6815744;
  EOS_SH_TLBMISSLD = SH_BASE+2;   (*  TLB miss on a load 		 *)
  EOS_SH_TLBMISSST = SH_BASE+3;   (*  TLB miss on a store 		 *)
  EOS_SH_INITPG = SH_BASE+4;   (*  Initial page write 		 *)
  EOS_SH_TLBPROTLD = SH_BASE+5;   (*  TLB protection violation on a load  *)
  EOS_SH_TLBPROTST = SH_BASE+6;   (*  TLB protection violation on a store  *)
  EOS_SH_ADDRLD = SH_BASE+7;   (*  Address error on a load	 *)
  EOS_SH_ADDRST = SH_BASE+8;   (*  Address error on a store  *)
  EOS_SH_TRAPA = SH_BASE+11;   (*  TRAPA instruction 		 *)
  EOS_SH_RSRVINSTR = SH_BASE+12;   (*  Reserved instruction		 *)
  EOS_SH_ILLSLOT = SH_BASE+13;   (*  Illegal slot instruction  *)
  EOS_SH_BRKPT = SH_BASE+15;   (*  User break point 		 *)


CONST 
  SPARC_BASE = 7012352;
  EOS_SPARC_INSTRBLK = SPARC_BASE+1H;   (*  Instruction access exception  *)
  EOS_SPARC_ILLINSTR = SPARC_BASE+2H;   (*  Illegal instruction		 *)
  EOS_SPARC_PRIVINSTR = SPARC_BASE+3H;   (*  Privileged instruction	 *)
  EOS_SPARC_FPDISABLE = SPARC_BASE+4H;   (*  Floating point disabled	 *)
  EOS_SPARC_WINDOWOV = SPARC_BASE+5H;   (*  Window overflow			 *)
  EOS_SPARC_WINDOWUF = SPARC_BASE+6H;   (*  Window underflow			 *)
  EOS_SPARC_UNALIGNED = SPARC_BASE+7H;   (*  Memory address unaligned	 *)
  EOS_SPARC_FP = SPARC_BASE+8H;   (*  Floating point exception	 *)
  EOS_SPARC_DATABLK = SPARC_BASE+9H;   (*  Data access exception	 *)
  EOS_SPARC_TAGOV = SPARC_BASE+0AH;   (*  Tagged arith. overflow	 *)
  EOS_SPARC_WATCHPNT = SPARC_BASE+0BH;   (*  Watchpoint detected		 *)
  EOS_SPARC_RREGACC = SPARC_BASE+20H;   (*  Register access error	 *)
  EOS_SPARC_INSTRPER = SPARC_BASE+21H;   (*  Instruction access error	 *)
  EOS_SPARC_CPDISABLE = SPARC_BASE+24H;   (*  Coprocessor disabled		 *)
  EOS_SPARC_NOFLUSH = SPARC_BASE+25H;   (*  Unimplemented FLUSH		 *)
  EOS_SPARC_CP = SPARC_BASE+28H;   (*  Coprocessor exception	 *)
  EOS_SPARC_DATAPER = SPARC_BASE+29H;   (*  Data access error		 *)
  EOS_SPARC_ZERODIV = SPARC_BASE+2AH;   (*  Divide by Zero 			 *)
  EOS_SPARC_DATAST = SPARC_BASE+2BH;   (*  Data store error			 *)
  EOS_SPARC_DATAMMU = SPARC_BASE+2CH;   (*  MMU Data miss			 *)
  EOS_SPARC_INSTRMMU = SPARC_BASE+3CH;   (*  MMU Instruction miss		 *)
  E_GFM_BASE = 60000H;   (*  GFM error code base  *)
  E_ILLPRM = E_GFM_BASE+0;   (*  illegal parameter  *)
  E_IDFULL = E_GFM_BASE+1;   (*  identifier table full  *)
  E_BADSIZ = E_GFM_BASE+2;   (*  bad size error  *)
  E_RGFULL = E_GFM_BASE+3;   (*  region definition full  *)
  E_UNID = E_GFM_BASE+4;   (*  unallocated identifier number  *)
  E_NULLRG = E_GFM_BASE+5;   (*  null region  *)
  E_BADMOD = E_GFM_BASE+6;   (*  bad drawmap / pattern mode  *)
  E_NOFONT = E_GFM_BASE+7;   (*  no active font  *)
  E_NODM = E_GFM_BASE+8;   (*  no drawmap  *)
  E_NOPLAY = E_GFM_BASE+9;   (*  no play/record is in progress  *)
  E_ABORT = E_GFM_BASE+10;   (*  marks a play/record as aborted  *)
  E_QFULL = E_GFM_BASE+11;   (*  audio queue is full  *)
  E_BUSY = E_GFM_BASE+12;   (*  audio device is busy  *)
  E_GSL_BASE = 60064H;   (*  GSL error code base  *)
  E_RES_BASE = E_GSL_BASE+0;   (*  errors for resource manager  *)
  E_RES_NOSLOT = E_RES_BASE+0;   (*  No free slot in the table	 *)
  E_RES_BADSLOT = E_RES_BASE+1;   (*  The slot is bad 				 *)
  E_RES_NOSHARE = E_RES_BASE+2;   (*  The resource is not sharable  *)
  E_RES_NOTYPE = E_RES_BASE+3;   (*  The type is bad 				 *)
  E_RES_NORES = E_RES_BASE+4;   (*  The ID of the resource is bad  *)
  E_REQ_BASE = E_GSL_BASE+10;   (*  errors for request manager  *)
  E_REQ_NOITEMS = E_REQ_BASE+0;   (*  request has no items  *)
  E_REQ_BADITEM = E_REQ_BASE+1;   (*  item number out of range  *)
  E_REQ_BADCOLS = E_REQ_BASE+2;   (*  request has bad num. columns  *)
  E_REQ_BADPTR = E_REQ_BASE+3;   (*  bad pointer for item array  *)
  E_REQ_NOCREATE = E_REQ_BASE+4;   (*  request hasn't been created  *)
  E_REQ_TIMEOUT = E_REQ_BASE+5;   (*  request has timed out  *)
  E_REQ_NOSEL = E_REQ_BASE+6;   (*  no selection has been made  *)
  E_REQ_DEFID = E_REQ_BASE+7;   (*  bad definition id  *)
  E_REQ_DEFACT = E_REQ_BASE+8;   (*  bad definition action code  *)
  E_REQ_STATE = E_REQ_BASE+9;   (*  illegal item state  *)
  E_REQ_BADRECT = E_REQ_BASE+10;   (*  illegal request rectangle  *)
  E_CNT_BASE = E_GSL_BASE+30;   (*  errors for control manager  *)
  E_CNT_BHVID = E_CNT_BASE+0;   (*  bad standard behavior id  *)
  E_CNT_DEFID = E_CNT_BASE+1;   (*  bad standard definition id  *)
  E_CNT_DEFACT = E_CNT_BASE+2;   (*  bad action for definition function  *)
  E_CNT_BHVACT = E_CNT_BASE+3;   (*  bad action for behavior function  *)
  E_CNT_STATE = E_CNT_BASE+4;   (*  bad control state  *)
  E_CNT_PART = E_CNT_BASE+5;   (*  bad control part code  *)
  E_CNT_FLAGS = E_CNT_BASE+6;   (*  bad flags  *)
  E_CNT_MINMAX = E_CNT_BASE+7;   (*  bad min, bad max or value out of range  *)
  E_CNT_TYPE = E_CNT_BASE+8;   (*  bad type of control  *)
  E_CLIP_BASE = E_GSL_BASE+40;   (*  errors for clipboard manager  *)
  E_CLIP_DEV = E_CLIP_BASE+0;   (*  can't find clipboard default device from preferences  *)
  E_CLIP_FULL = E_CLIP_BASE+1;   (*  clipboard is full (attempt to write too many different types in clipboard)  *)
  E_CLIP_TYPE = E_CLIP_BASE+2;   (*  type not currently represented in clipboard  *)
  E_CLIP_ACC = E_CLIP_BASE+3;   (*  clipboard not opened for the requested access  *)
  E_CLIP_CNT = E_CLIP_BASE+4;   (*  type offset greater than type count  *)
  E_CLIP_OPEN = E_CLIP_BASE+5;   (*  clipboard not currently opened  *)
  E_CLIP_INIT = E_CLIP_BASE+6;   (*  clipboard not initialized  *)
  E_CLIP_CLOSE = E_CLIP_BASE+7;   (*  clipboard is not currently closed  *)
  E_CLIP_RW = E_CLIP_BASE+8;   (*  can't rewrite - type not represented in clipboard  *)
  E_HNDLR_BASE = E_GSL_BASE+50;   (*  errors for dispatch manager  *)
  E_HNDLR_UNKNOWN = E_HNDLR_BASE+0;
  E_ATBL_BASE = E_GSL_BASE+55;   (*  errors for association table routines  *)
  E_ATBL_NOENTRY = E_ATBL_BASE+0;   (*  no entry found  *)
  E_BOX_BASE = E_GSL_BASE+60;   (*  errors for ed_box function   *)
  E_BOX_TABLE = E_BOX_BASE+0;   (*  line table overflow  *)
  E_BOX_COUNT = E_BOX_BASE+1;   (*  text too long (max = 65535 characters)  *)
  E_BOX_TYPE = E_BOX_BASE+2;   (*  bad type or type not implemented  *)
  E_BOX_MAXL = E_BOX_BASE+3;   (*  attempt to draw too long line (max is 1024 chars)  *)
  E_BOX_NOTAB = E_BOX_BASE+4;   (*  need a line table (if the BOX_F_USETAB flag is set in the "type" parameter)  *)
  E_BOX_NOFONT = E_BOX_BASE+5;   (*  font not set in the drawmap  *)
  E_BOX_RECT = E_BOX_BASE+6;   (*  bad rectangle  *)
  E_INIT_BASE = E_GSL_BASE+80;   (*  errors for init function  *)
  E_INIT_VARERR = E_INIT_BASE+0;
  E_INTER_BASE = E_GSL_BASE+85;
  E_INTER_NOMOD = E_INTER_BASE+0;   (*  no preference module  *)
  E_INTER_ILLARG = E_INTER_BASE+1;   (*  illegal arguement  *)
  E_OVL_BASE = E_GSL_BASE+90;   (*  overlay window errors  *)
  E_OVL_BADRECT = E_OVL_BASE+0;   (*  bad rectangle for overlay  *)
  E_OVL_NOTTOP = E_OVL_BASE+1;   (*  not top of overlay stack  *)
  E_OVL_UNKNOWN = E_OVL_BASE+2;   (*  unknown overlay  *)
  E_IND_BASE = E_GSL_BASE+100;   (*  indicator manager errors  *)
  E_IND_DEFID = E_IND_BASE+0;   (*  bad definition id  *)
  E_IND_DEFACT = E_IND_BASE+1;   (*  bad action for def. function  *)
  E_IND_MINMAX = E_IND_BASE+2;   (*  bad min, max or value out of range  *)
  E_IND_BADCORDS = E_IND_BASE+3;   (*  bad coordinates for indicator  *)
  E_IND_NOCREATE = E_IND_BASE+4;   (*  attempt op. on non-created ind.  *)
  E_IND_BADFLAGS = E_IND_BASE+5;   (*  bad flag combination  *)
  E_IND_BADPTR = E_IND_BASE+6;   (*  bad pointer in structure  *)
  E_IND_BADDISP = E_IND_BASE+7;   (*  bad displacement  *)


CONST 
  E_IFF_BASE = 458752;   (*  base error code for IFF  *)
  E_IFF_RONLY = E_IFF_BASE+1;   (*  this path is read-only  *)
  E_IFF_WONLY = E_IFF_BASE+2;   (*  this path is write-only  *)
  E_IFF_ACTFORM = E_IFF_BASE+3;   (*  there is no FORM active  *)
  E_IFF_READER = E_IFF_BASE+4;   (*  wrong reader for this type of FORM  *)
  E_IFF_NOTIFF = E_IFF_BASE+5;   (*  not an IFF file  *)
  E_IFF_BADPARM = E_IFF_BASE+6;   (*  bad parameters  *)
  E_IFF_BADCAT = E_IFF_BASE+7;   (*  bad CAT id (for iff_open)  *)
  E_IFF_SIZE_UNKNOWN = E_IFF_BASE+8;   (*  cannot skip, size is unknown  *)
  E_IFF_NOT_DATA = E_IFF_BASE+9;   (*  not to the data yet  *)
  E_IFF_PIPE_SEEK = E_IFF_BASE+10;   (*  attempt to seek back in a pipe  *)
  E_IFF_BADCHUNKSIZE = E_IFF_BASE+11;   (*                                               fixed size chunk was not the   *)
  E_IFF_FPNOTNUM = E_IFF_BASE+12;   (*  can't make float conversion  *)

VAR 
  errno: SYSTEM.int;

END os9errno.
